name: vCarpool CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Manual trigger

env:
  NODE_VERSION: '18.x'
  AZURE_FUNCTIONAPP_NAME: vcarpool-api
  AZURE_STATICWEBAPP_NAME: vcarpool-web
  BACKEND_WORKING_DIR: './backend'
  FRONTEND_WORKING_DIR: './frontend'
  SHARED_WORKING_DIR: './shared'

jobs:
  # Build and test shared library
  shared-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.SHARED_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.SHARED_WORKING_DIR }}/package-lock.json'
      - name: Install dependencies
        run: npm ci
      - name: Build shared library
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Upload shared artifacts
        uses: actions/upload-artifact@v3
        with:
          name: shared-dist
          path: ${{ env.SHARED_WORKING_DIR }}/dist

  # Build and test backend
  backend-build:
    needs: shared-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACKEND_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.BACKEND_WORKING_DIR }}/package-lock.json'
      - name: Download shared artifacts
        uses: actions/download-artifact@v3
        with:
          name: shared-dist
          path: ${{ env.SHARED_WORKING_DIR }}/dist
      - name: Install shared library
        working-directory: ${{ env.SHARED_WORKING_DIR }}
        run: npm ci
      - name: Install backend dependencies
        run: npm ci
      - name: Lint backend code
        run: npm run lint
      - name: Build backend
        run: npm run build
      - name: Run backend tests
        run: npm test
      - name: Upload backend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-dist
          path: ${{ env.BACKEND_WORKING_DIR }}/dist

  # Build and test frontend
  frontend-build:
    needs: shared-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '${{ env.FRONTEND_WORKING_DIR }}/package-lock.json'
      - name: Download shared artifacts
        uses: actions/download-artifact@v3
        with:
          name: shared-dist
          path: ${{ env.SHARED_WORKING_DIR }}/dist
      - name: Install shared library
        working-directory: ${{ env.SHARED_WORKING_DIR }}
        run: npm ci
      - name: Install frontend dependencies
        run: npm ci
      - name: Lint frontend code
        run: npm run lint
      - name: Build frontend
        run: npm run build
      - name: Run frontend tests
        run: npm test
      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-dist
          path: ${{ env.FRONTEND_WORKING_DIR }}/.next

  # Deploy backend to Azure Functions
  backend-deploy:
    needs: [backend-build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Download backend artifacts
        uses: actions/download-artifact@v3
        with:
          name: backend-dist
          path: ${{ env.BACKEND_WORKING_DIR }}/dist
      - name: Install production dependencies
        working-directory: ${{ env.BACKEND_WORKING_DIR }}
        run: npm ci --production
      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.BACKEND_WORKING_DIR }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

  # Deploy frontend to Azure Static Web Apps
  frontend-deploy:
    needs: [frontend-build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - name: Download frontend artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-dist
          path: ${{ env.FRONTEND_WORKING_DIR }}/.next
      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: ${{ env.FRONTEND_WORKING_DIR }}
          output_location: ".next"
          skip_app_build: true
