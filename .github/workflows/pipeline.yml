name: 🚀 Carpool CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'shared/**'
      - 'infra/**'
      - '.github/workflows/**'
      - 'package*.json'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: false
        default: 'production'

permissions:
  contents: read
  id-token: write
  security-events: write

env:
  NODE_VERSION: '22'
  RESOURCE_GROUP: 'carpool-rg'
  FUNCTION_APP: 'carpool-backend'

jobs:
  # =============================================================================
  # STAGE 1: VALIDATE & TEST
  # =============================================================================

  validate:
    name: 🔍 Validate & Test
    runs-on: ubuntu-latest
    outputs:
      backend-changed: ${{ steps.changes.outputs.backend }}
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      infra-changed: ${{ steps.changes.outputs.infra }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            backend:
              - 'backend/**'
              - 'shared/**'
            frontend:
              - 'frontend/**'
              - 'shared/**'
            infra:
              - 'infra/**'
              - '.github/workflows/**'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Shared Package
        run: npm run build:shared

      - name: TypeScript & Lint Check
        run: |
          # Run TypeScript checking
          npm run type-check:backend
          npm run type-check:frontend

          # Run linting
          npm run lint:backend
          npm run lint:frontend

      - name: Security Scan
        run: |
          npm audit --audit-level high
          npx semgrep --config=auto --json --output=security-results.json . || true

      - name: Run Backend Tests
        if: steps.changes.outputs.backend == 'true' || github.event_name == 'pull_request'
        run: npm run test:backend:ci
        env:
          NODE_ENV: test

      - name: Azure Login (for infrastructure validation)
        if: steps.changes.outputs.infra == 'true'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate Infrastructure
        if: steps.changes.outputs.infra == 'true'
        run: |
          az deployment group validate \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --template-file infra/main.bicep \
            --parameters appName=carpool environmentName=prod location=eastus2

  # =============================================================================
  # STAGE 2: DEPLOY (Only on main branch pushes)
  # =============================================================================

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [validate]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://carpool-backend-g9eqf0efgxe4hbae.eastus2-01.azurewebsites.net/api/health
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy Backend
        if: needs.validate.outputs.backend-changed == 'true' || github.event.inputs.environment != ''
        run: |
          npm run build:shared
          cd backend
          npm run build
          npm install -g azure-functions-core-tools@4 --unsafe-perm true
          func azure functionapp publish ${{ env.FUNCTION_APP }} --typescript

      - name: Deploy Frontend
        if: needs.validate.outputs.frontend-changed == 'true' || github.event.inputs.environment != ''
        run: |
          cd frontend
          npm run build

          # Get deployment token
          DEPLOYMENT_TOKEN=$(az staticwebapp secrets list \
            --name carpool-web-prod \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --query "properties.apiKey" \
            --output tsv)

          # Deploy frontend
          npx @azure/static-web-apps-cli deploy \
            --app-location "." \
            --output-location "out" \
            --deployment-token "$DEPLOYMENT_TOKEN"

  # =============================================================================
  # STAGE 3: HEALTH CHECK
  # =============================================================================

  health-check:
    name: 🩺 Health Check
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always() && needs.deploy.result == 'success'
    steps:
      - name: Test API Health
        run: |
          echo "🔄 Testing API health..."
          for i in {1..3}; do
            if curl -f -s "https://carpool-backend-g9eqf0efgxe4hbae.eastus2-01.azurewebsites.net/api/health" | jq -e '.status == "healthy"'; then
              echo "✅ Health check passed"
              exit 0
            fi
            echo "⏳ Attempt $i/3 failed, retrying in 30s..."
            sleep 30
          done
          echo "❌ Health check failed"
          exit 1

  # =============================================================================
  # SUMMARY
  # =============================================================================

  summary:
    name: 📋 Summary
    runs-on: ubuntu-latest
    needs: [validate, deploy, health-check]
    if: always()
    steps:
      - name: Pipeline Summary
        run: |
          echo "# 🚀 Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "- Validation: ${{ needs.validate.result == 'success' && '✅' || '❌' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Deployment: ${{ needs.deploy.result == 'success' && '✅' || needs.deploy.result == 'skipped' && '⏭️' || '❌' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check: ${{ needs.health-check.result == 'success' && '✅' || needs.health-check.result == 'skipped' && '⏭️' || '❌' }}" >> $GITHUB_STEP_SUMMARY
