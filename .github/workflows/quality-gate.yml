name: CI Quality Gate

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies (root)
        run: npm ci --ignore-scripts

      - name: Install backend & shared workspaces
        run: |
          npm run install:backend

      - name: Lint backend
        run: npm run lint:backend

      - name: Root lint & Prettier
        run: eslint . --ext .ts,.tsx

      - name: Architectural circular-deps check
        run: npm run lint:arch

      - name: Build backend
        run: npm run build:backend --if-present

      - name: Test backend
        run: npm run test:backend -- --coverage --maxWorkers=2

      - name: Enforce coverage threshold
        run: |
          COVERAGE=$(node -e "const fs=require('fs');const r=JSON.parse(fs.readFileSync('backend/coverage/coverage-summary.json'));console.log(r.total.lines.pct)")
          echo "Coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 60" | bc -l) )); then
            echo "::error ::Coverage threshold not met (60%)"; exit 1;
          fi

  perf-test:
    needs: backend-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies (root)
        run: npm ci --ignore-scripts

      - name: Install backend & shared workspaces
        run: npm run install:backend

      - name: Start Functions host (background)
        run: npm run func:start:ci &
        shell: bash
        env:
          OTEL_ENABLED: "false"
        # wait for host readiness
      - name: Wait for Functions Host
        run: npx wait-port 7071 --timeout 60000

      - name: Run Phase-2 performance test
        run: PERF_VUS=50 PERF_DURATION_SEC=30 PERF_LATENCY_MS=150 npm run perf:phase2

  perf-test-heavy:
    needs: backend-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install deps
        run: npm ci --ignore-scripts

      - name: Install backend & shared
        run: npm run install:backend

      - name: Start Functions host (background)
        run: npm run func:start:ci &
        shell: bash
        env:
          OTEL_ENABLED: "false"

      - name: Wait for Functions Host
        run: npx wait-port 7071 --timeout 60000

      - name: Run Heavy Phase-2 load test
        run: PERF_VUS=100 PERF_DURATION_SEC=120 PERF_LATENCY_MS=200 npm run perf:phase2

  security-audit:
    needs: backend-ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install dependencies (root)
        run: npm ci --ignore-scripts

      - name: Run npm audit (high severity gate)
        run: |
          npm audit --production --audit-level=high || (echo "::error ::High severity vulnerabilities found" && exit 1)
