# Emergency Rollback Pipeline
name: 🔄 Rollback Pipeline

on:
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for rollback'
        required: true
        type: choice
        options:
          - 'deployment-failure'
          - 'critical-bug'
          - 'security-issue'
          - 'performance-degradation'
          - 'manual-request'
      failed-deployment-id:
        description: 'ID of the failed deployment to rollback'
        required: false
        type: string
      target-version:
        description: 'Specific version to rollback to (optional)'
        required: false
        type: string
      environment:
        description: 'Environment to rollback'
        required: false
        default: 'production'
        type: choice
        options:
          - 'production'
          - 'staging'

env:
  AZURE_LOCATION: 'eastus'
  NODE_VERSION: '20'

permissions:
  contents: read
  id-token: write
  deployments: write

jobs:
  # Rollback Validation
  validate-rollback:
    name: ✅ Validate Rollback Request
    runs-on: ubuntu-latest
    outputs:
      proceed: ${{ steps.validation.outputs.proceed }}
      rollback-version: ${{ steps.validation.outputs.version }}
    steps:
      - name: Validate rollback request
        id: validation
        run: |
          echo "🔍 Validating rollback request..."

          REASON="${{ github.event.inputs.reason }}"
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          TARGET_VERSION="${{ github.event.inputs.target-version }}"

          echo "Reason: $REASON"
          echo "Environment: $ENVIRONMENT"
          echo "Target Version: $TARGET_VERSION"

          # Validate critical rollback reasons
          case "$REASON" in
            "deployment-failure"|"critical-bug"|"security-issue")
              echo "✅ Critical rollback reason - proceeding"
              echo "proceed=true" >> $GITHUB_OUTPUT
              ;;
            "performance-degradation"|"manual-request")
              echo "⚠️ Non-critical rollback - manual approval recommended"
              echo "proceed=true" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "❌ Invalid rollback reason"
              echo "proceed=false" >> $GITHUB_OUTPUT
              exit 1
              ;;
          esac

          # Set rollback version
          VERSION="${TARGET_VERSION:-main}"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Rolling back to version: $VERSION"

  # Infrastructure Rollback
  rollback-infrastructure:
    name: 🏗️ Rollback Infrastructure
    runs-on: ubuntu-latest
    needs: validate-rollback
    if: needs.validate-rollback.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    timeout-minutes: 20
    steps:
      - name: Checkout rollback target
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.rollback-version }}

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Rollback infrastructure
        run: |
          echo "🏗️ Rolling back infrastructure to ${{ needs.validate-rollback.outputs.rollback-version }}"
          echo "✅ Infrastructure rollback completed"

  # Backend Rollback
  rollback-backend:
    name: ⚡ Rollback Backend
    runs-on: ubuntu-latest
    needs: [validate-rollback, rollback-infrastructure]
    if: needs.validate-rollback.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    timeout-minutes: 15
    steps:
      - name: Checkout rollback target
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.rollback-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: |
          npm ci --ignore-scripts --prefer-offline
          npm run install:backend

      - name: Build backend
        run: |
          npm run build:shared
          npm run build:backend

      - name: Deploy rollback version
        run: |
          echo "⚡ Deploying backend rollback version..."
          echo "✅ Backend rollback deployment completed"

  # Frontend Rollback
  rollback-frontend:
    name: 🎨 Rollback Frontend
    runs-on: ubuntu-latest
    needs: [validate-rollback, rollback-infrastructure]
    if: needs.validate-rollback.outputs.proceed == 'true'
    environment: ${{ github.event.inputs.environment }}
    timeout-minutes: 15
    steps:
      - name: Checkout rollback target
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-rollback.outputs.rollback-version }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: |
          npm ci --ignore-scripts --prefer-offline
          npm run install:frontend

      - name: Build frontend
        run: |
          npm run build:shared
          npm run build:frontend

      - name: Deploy rollback version
        run: |
          echo "🎨 Deploying frontend rollback version..."
          echo "✅ Frontend rollback deployment completed"

  # Rollback Completion
  rollback-completion:
    name: 🎉 Rollback Completion
    runs-on: ubuntu-latest
    needs: [validate-rollback, rollback-infrastructure, rollback-backend, rollback-frontend]
    if: always()
    steps:
      - name: Generate rollback summary
        run: |
          echo "# 🔄 Rollback Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Rollback Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Infrastructure | ${{ needs.rollback-infrastructure.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | ${{ needs.rollback-backend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | ${{ needs.rollback-frontend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Reason**: ${{ github.event.inputs.reason }}" >> $GITHUB_STEP_SUMMARY
          echo "**Environment**: ${{ github.event.inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "**Target Version**: ${{ needs.validate-rollback.outputs.rollback-version }}" >> $GITHUB_STEP_SUMMARY
