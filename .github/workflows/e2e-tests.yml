name: vCarpool E2E Tests

on:
  # Run on pull requests
  pull_request:
    branches: [main]
    paths:
      - "frontend/**"
      - "shared/**"

  # Allow manual trigger
  workflow_dispatch:
    inputs:
      browser:
        description: "Browser to test on"
        required: true
        default: "chromium"
        type: choice
        options:
          - "chromium"
          - "firefox"
          - "webkit"
          - "all"

env:
  NODE_VERSION: "22.x"
  FRONTEND_WORKING_DIR: "./frontend"
  SHARED_WORKING_DIR: "./shared"

jobs:
  # Build and test shared library
  shared-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.SHARED_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: package-lock.json # Root workspace lock file
      - name: Install dependencies
        run: npm ci
        working-directory: ./ # Install from root for workspace
      - name: Build shared library
        run: npm run build
      - name: Upload shared artifacts
        uses: actions/upload-artifact@v4
        with:
          name: shared-dist
          path: ${{ env.SHARED_WORKING_DIR }}/dist

  # Run E2E tests
  e2e-tests:
    needs: shared-build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.FRONTEND_WORKING_DIR }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: package-lock.json
      - name: Download shared artifacts
        uses: actions/download-artifact@v4
        with:
          name: shared-dist
          path: ${{ env.SHARED_WORKING_DIR }}/dist

      - name: Install dependencies
        run: npm ci
        working-directory: ./ # Install from root for workspace

      - name: Verify health check
        run: |
          cd ${{ github.workspace }}
          bash scripts/health-check.sh

      - name: Build frontend
        run: npm run build

      - name: Install Playwright browsers
        run: npx playwright install --with-deps ${{ github.event.inputs.browser != 'all' && github.event.inputs.browser || '' }}

      - name: Create test result directories
        run: mkdir -p e2e/test-results playwright-report

      - name: Run Playwright tests
        run: |
          browser="${{ github.event.inputs.browser }}"
          if [[ -z "$browser" || "$browser" == "chromium" ]]; then
            echo "Running E2E tests on Chromium"
            npx playwright test --reporter=list,html,github
          elif [[ "$browser" == "all" ]]; then
            echo "Running E2E tests on all browsers"
            npx playwright test --reporter=list,html,github
          else
            echo "Running E2E tests on $browser"
            npx playwright test --browser=$browser --reporter=list,html,github
          fi
        env:
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ${{ env.FRONTEND_WORKING_DIR }}/playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-screenshots
          path: ${{ env.FRONTEND_WORKING_DIR }}/e2e/test-results/
          retention-days: 7
