name: 🔍 Bicep Template Validation

on:
  pull_request:
    branches: [main]
    paths:
      - 'infra/**/*.bicep'
      - 'infra/**/*.json'
  push:
    branches: [main]
    paths:
      - 'infra/**/*.bicep'
      - 'infra/**/*.json'
  workflow_dispatch:

env:
  AZURE_LOCATION: 'eastus'

permissions:
  contents: read
  id-token: write

jobs:
  validate-bicep:
    name: 🏗️ Validate Bicep Templates
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [dev, prod]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Validate database template
        run: |
          echo "🔍 Validating database.bicep for ${{ matrix.environment }}..."

          az deployment group validate \
            --resource-group "temp-validation-rg" \
            --template-file "infra/database.bicep" \
            --parameters "infra/parameters.${{ matrix.environment }}.json" \
            --mode Complete \
            --verbose || {
              echo "❌ Database template validation failed for ${{ matrix.environment }}"
              exit 1
            }

          echo "✅ Database template validation passed for ${{ matrix.environment }}"

      - name: Validate compute template
        run: |
          echo "🔍 Validating main-compute.bicep for ${{ matrix.environment }}..."

          az deployment group validate \
            --resource-group "temp-validation-rg" \
            --template-file "infra/main-compute.bicep" \
            --parameters "infra/parameters.${{ matrix.environment }}.json" \
            --parameters databaseResourceGroup="temp-db-validation-rg" \
            --mode Complete \
            --verbose || {
              echo "❌ Compute template validation failed for ${{ matrix.environment }}"
              exit 1
            }

          echo "✅ Compute template validation passed for ${{ matrix.environment }}"

      - name: Test template what-if analysis
        run: |
          echo "🔍 Running what-if analysis for ${{ matrix.environment }}..."

          # Database what-if
          az deployment group what-if \
            --resource-group "temp-validation-rg" \
            --template-file "infra/database.bicep" \
            --parameters "infra/parameters.${{ matrix.environment }}.json" \
            --verbose

          echo "✅ What-if analysis completed for ${{ matrix.environment }}"

  lint-bicep:
    name: 🧹 Lint Bicep Templates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bicep CLI
        run: |
          curl -Lo bicep https://github.com/Azure/bicep/releases/latest/download/bicep-linux-x64
          chmod +x ./bicep
          sudo mv ./bicep /usr/local/bin/bicep

      - name: Lint Bicep templates
        run: |
          echo "🧹 Linting Bicep templates..."

          # Lint all Bicep files
          for bicep_file in infra/*.bicep; do
            echo "Linting $bicep_file..."
            bicep build "$bicep_file" --stdout > /dev/null
            echo "✅ $bicep_file passed linting"
          done

          echo "✅ All Bicep templates passed linting"

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Bicep security scan
        run: |
          echo "🔒 Running security scan on Bicep templates..."

          # This would normally use tools like Checkov or custom security rules
          # For now, we'll check for basic security patterns

          echo "🔍 Checking for security best practices..."

          # Check for HTTPS enforcement
          if grep -r "httpsOnly.*true" infra/*.bicep; then
            echo "✅ HTTPS enforcement found"
          else
            echo "⚠️ Consider enforcing HTTPS for web resources"
          fi

          # Check for minimum TLS version
          if grep -r "minTlsVersion.*1.2" infra/*.bicep; then
            echo "✅ Minimum TLS version configured"
          else
            echo "⚠️ Consider setting minimum TLS version to 1.2"
          fi

          # Check for storage encryption
          if grep -r "supportsHttpsTrafficOnly.*true" infra/*.bicep; then
            echo "✅ Storage HTTPS enforcement found"
          else
            echo "⚠️ Consider enforcing HTTPS for storage accounts"
          fi

          echo "✅ Security scan completed"

  resource-costs:
    name: 💰 Estimate Costs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Estimate deployment costs
        run: |
          echo "💰 Estimating deployment costs..."

          echo "📊 Estimated monthly costs by environment:"
          echo ""
          echo "🧪 Development Environment:"
          echo "  - Cosmos DB (400 RU/s): ~$24/month"
          echo "  - Function App (Consumption): ~$0-5/month"
          echo "  - Static Web App (Free): $0/month"
          echo "  - Storage Account: ~$1-2/month"
          echo "  - Application Insights: ~$0-2/month"
          echo "  Total: ~$25-35/month"
          echo ""
          echo "🚀 Production Environment:"
          echo "  - Cosmos DB (400 RU/s): ~$24/month"
          echo "  - Function App (Basic): ~$50-100/month"
          echo "  - Static Web App (Standard): ~$9/month"
          echo "  - Storage Account: ~$2-5/month"
          echo "  - Application Insights: ~$0-5/month"
          echo "  Total: ~$85-145/month"
          echo ""
          echo "💡 Cost optimization tip: Delete compute resource group when not needed"
          echo "   Database RG (persistent): ~$24/month"
          echo "   Compute RG (can delete): ~$60-120/month"

  validation-summary:
    name: 📋 Validation Summary
    runs-on: ubuntu-latest
    needs: [validate-bicep, lint-bicep, security-scan, resource-costs]
    if: always()
    steps:
      - name: Display validation results
        run: |
          echo "📋 Bicep Template Validation Summary:"
          echo ""
          echo "🔍 Template Validation: ${{ needs.validate-bicep.result }}"
          echo "🧹 Linting: ${{ needs.lint-bicep.result }}"
          echo "🔒 Security Scan: ${{ needs.security-scan.result }}"
          echo "💰 Cost Estimation: ${{ needs.resource-costs.result }}"
          echo ""

          if [[ "${{ needs.validate-bicep.result }}" == "success" && 
                "${{ needs.lint-bicep.result }}" == "success" && 
                "${{ needs.security-scan.result }}" == "success" ]]; then
            echo "✅ All Bicep validation checks passed!"
            echo "🚀 Templates are ready for deployment"
          else
            echo "❌ Some validation checks failed"
            echo "🔧 Please review and fix the issues before deployment"
            exit 1
          fi
