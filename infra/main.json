{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.35.1.17967",
      "templateHash": "5245373543157757864"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "appName": {
      "type": "string",
      "defaultValue": "vcarpool",
      "metadata": {
        "description": "App name that will be used as prefix for all resources"
      }
    },
    "environmentName": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": ["dev", "test", "prod"],
      "metadata": {
        "description": "Environment name (dev, test, prod)"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}-cosmos-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Cosmos DB account name"
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-api-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Function App name"
      }
    },
    "staticWebAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-web-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Static Web App name"
      }
    },
    "appInsightsName": {
      "type": "string",
      "defaultValue": "[format('{0}-insights-{1}', parameters('appName'), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Application Insights name"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('{0}sa{1}', replace(parameters('appName'), '-', ''), parameters('environmentName'))]",
      "metadata": {
        "description": "Azure Storage Account name"
      }
    }
  },
  "variables": {
    "tags": {
      "application": "[parameters('appName')]",
      "environment": "[parameters('environmentName')]",
      "createdBy": "Bicep"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-08-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "accessTier": "Hot",
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[parameters('appInsightsName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('appName'), parameters('environmentName')))]",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs-{1}', parameters('appName'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}-logs-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-03-01",
      "name": "[format('{0}-plan-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "functionapp",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan-{1}', parameters('appName'), parameters('environmentName')))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2021-08-01').keys[0].value)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~22"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "COSMOS_DB_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
            },
            {
              "name": "COSMOS_DB_KEY",
              "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').primaryMasterKey]"
            },
            {
              "name": "COSMOS_DB_DATABASE_ID",
              "value": "vcarpool"
            },
            {
              "name": "JWT_SECRET",
              "value": "temp-jwt-secret"
            },
            {
              "name": "JWT_REFRESH_SECRET",
              "value": "temp-refresh-secret"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', parameters('appInsightsName')), '2020-02-02').ConnectionString]"
            }
          ],
          "cors": {
            "allowedOrigins": [
              "[format('https://{0}.azurestaticapps.net', parameters('staticWebAppName'))]",
              "http://localhost:3000"
            ],
            "supportCredentials": true
          },
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "nodeVersion": "~18"
        },
        "httpsOnly": true
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', parameters('appInsightsName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan-{1}', parameters('appName'), parameters('environmentName')))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-10-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "enableFreeTier": "[not(equals(parameters('environmentName'), 'prod'))]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/vcarpool', parameters('cosmosDbAccountName'))]",
      "properties": {
        "resource": {
          "id": "vcarpool"
        },
        "options": {
          "throughput": 400
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/users', format('{0}/vcarpool', parameters('cosmosDbAccountName')))]",
      "properties": {
        "resource": {
          "id": "users",
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[0], split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/trips', format('{0}/vcarpool', parameters('cosmosDbAccountName')))]",
      "properties": {
        "resource": {
          "id": "trips",
          "partitionKey": {
            "paths": ["/driverId"],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": [
              {
                "path": "/\"_etag\"/?"
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[0], split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/schedules', format('{0}/vcarpool', parameters('cosmosDbAccountName')))]",
      "properties": {
        "resource": {
          "id": "schedules",
          "partitionKey": {
            "paths": ["/userId"],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[0], split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/swap-requests', format('{0}/vcarpool', parameters('cosmosDbAccountName')))]",
      "properties": {
        "resource": {
          "id": "swap-requests",
          "partitionKey": {
            "paths": ["/requesterId"],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[0], split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-10-15",
      "name": "[format('{0}/email-templates', format('{0}/vcarpool', parameters('cosmosDbAccountName')))]",
      "properties": {
        "resource": {
          "id": "email-templates",
          "partitionKey": {
            "paths": ["/id"],
            "kind": "Hash"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[0], split(format('{0}/vcarpool', parameters('cosmosDbAccountName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}-kv-{1}', parameters('appName'), parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForTemplateDeployment": true,
        "enableRbacAuthorization": false
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-11-01-preview",
      "name": "[format('{0}/{1}', format('{0}-kv-{1}', parameters('appName'), parameters('environmentName')), 'add')]",
      "properties": {
        "accessPolicies": [
          {
            "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01', 'full').identity.principalId]",
            "tenantId": "[subscription().tenantId]",
            "permissions": {
              "secrets": ["get", "list"]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-kv-{1}', parameters('appName'), parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.Web/staticSites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('staticWebAppName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {
        "provider": "GitHub",
        "stagingEnvironmentPolicy": "Enabled",
        "allowConfigFileUpdates": true
      }
    }
  ],
  "outputs": {
    "functionAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}/api', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2021-03-01').defaultHostName)]"
    },
    "staticWebAppEndpoint": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/staticSites', parameters('staticWebAppName')), '2021-03-01').defaultHostname)]"
    },
    "cosmosDbEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2021-10-15').documentEndpoint]"
    },
    "functionAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    },
    "staticWebAppName": {
      "type": "string",
      "value": "[parameters('staticWebAppName')]"
    }
  }
}
