import * as browserSdkLoaderHelper from "./browserSdkLoaderHelper.js";
import type { InternalConfig } from "../shared/index.js";
export declare class BrowserSdkLoader {
    private static _instance;
    private static _sdkLoader;
    private static _aiUrl;
    private _isIkeyValid;
    private _isInitialized;
    private _browserSdkLoaderIkey?;
    constructor(config: InternalConfig);
    isInitialized(): boolean;
    static getInstance(): BrowserSdkLoader;
    private _getBrowserSdkLoaderIkey;
    /**
     * Gets string to inject into the web page
     * @returns The string to inject into the web page
     */
    private _getBrowserSdkLoaderReplacedStr;
    private _initialize;
    /**
     * Validate response and try to inject Browser SDK Loader
     */
    ValidateInjection(response: any, input: string | Buffer): boolean;
    /**
     * Inject Browser SDK Loader
     */
    InjectSdkLoader(response: any, input: string | Buffer, encodeType?: browserSdkLoaderHelper.contentEncodingMethod, bufferEncodeType?: string): string | Buffer;
    private _getInjectedCompressBuffer;
    dispose(): void;
}
//# sourceMappingURL=browserSdkLoader.d.ts.map