"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.monitoringDataPoints = exports.configurationEtag = exports.invariantVersion = exports.roleName = exports.streamId = exports.instanceName = exports.machineName = exports.transmissionTime = exports.ikey = exports.apiVersion = exports.endpoint = exports.accept = exports.monitoringDataPoint = exports.contentType = void 0;
const mappers_js_1 = require("../models/mappers.js");
exports.contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
exports.monitoringDataPoint = {
    parameterPath: ["options", "monitoringDataPoint"],
    mapper: mappers_js_1.MonitoringDataPoint,
};
exports.accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
exports.endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-04-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
exports.ikey = {
    parameterPath: "ikey",
    mapper: {
        serializedName: "ikey",
        required: true,
        type: {
            name: "String",
        },
    },
};
exports.transmissionTime = {
    parameterPath: ["options", "transmissionTime"],
    mapper: {
        serializedName: "x-ms-qps-transmission-time",
        type: {
            name: "Number",
        },
    },
};
exports.machineName = {
    parameterPath: ["options", "machineName"],
    mapper: {
        serializedName: "x-ms-qps-machine-name",
        type: {
            name: "String",
        },
    },
};
exports.instanceName = {
    parameterPath: ["options", "instanceName"],
    mapper: {
        serializedName: "x-ms-qps-instance-name",
        type: {
            name: "String",
        },
    },
};
exports.streamId = {
    parameterPath: ["options", "streamId"],
    mapper: {
        serializedName: "x-ms-qps-stream-id",
        type: {
            name: "String",
        },
    },
};
exports.roleName = {
    parameterPath: ["options", "roleName"],
    mapper: {
        serializedName: "x-ms-qps-role-name",
        type: {
            name: "String",
        },
    },
};
exports.invariantVersion = {
    parameterPath: ["options", "invariantVersion"],
    mapper: {
        serializedName: "x-ms-qps-invariant-version",
        type: {
            name: "String",
        },
    },
};
exports.configurationEtag = {
    parameterPath: ["options", "configurationEtag"],
    mapper: {
        serializedName: "x-ms-qps-configuration-etag",
        type: {
            name: "String",
        },
    },
};
exports.monitoringDataPoints = {
    parameterPath: ["options", "monitoringDataPoints"],
    mapper: {
        serializedName: "monitoringDataPoints",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Composite",
                    className: "MonitoringDataPoint",
                },
            },
        },
    },
};
//# sourceMappingURL=parameters.js.map