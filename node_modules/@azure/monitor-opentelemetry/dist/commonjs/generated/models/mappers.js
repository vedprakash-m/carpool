"use strict";
/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.discriminators = exports.QuickpulseClientPublishHeaders = exports.QuickpulseClientIsSubscribedHeaders = exports.Trace = exports.Request = exports.RemoteDependency = exports.Exception = exports.Event = exports.ServiceError = exports.QuotaConfigurationInfo = exports.DocumentFilterConjunctionGroupInfo = exports.DocumentStreamInfo = exports.FilterInfo = exports.FilterConjunctionGroupInfo = exports.DerivedMetricInfo = exports.CollectionConfigurationInfo = exports.CollectionConfigurationError = exports.ProcessCpuData = exports.KeyValuePairString = exports.DocumentIngress = exports.MetricPoint = exports.MonitoringDataPoint = void 0;
exports.MonitoringDataPoint = {
    type: {
        name: "Composite",
        className: "MonitoringDataPoint",
        modelProperties: {
            version: {
                serializedName: "Version",
                required: true,
                type: {
                    name: "String",
                },
            },
            invariantVersion: {
                serializedName: "InvariantVersion",
                required: true,
                type: {
                    name: "Number",
                },
            },
            instance: {
                serializedName: "Instance",
                required: true,
                type: {
                    name: "String",
                },
            },
            roleName: {
                serializedName: "RoleName",
                required: true,
                type: {
                    name: "String",
                },
            },
            machineName: {
                serializedName: "MachineName",
                required: true,
                type: {
                    name: "String",
                },
            },
            streamId: {
                serializedName: "StreamId",
                required: true,
                type: {
                    name: "String",
                },
            },
            timestamp: {
                serializedName: "Timestamp",
                type: {
                    name: "DateTime",
                },
            },
            transmissionTime: {
                serializedName: "TransmissionTime",
                type: {
                    name: "DateTime",
                },
            },
            isWebApp: {
                serializedName: "IsWebApp",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            performanceCollectionSupported: {
                serializedName: "PerformanceCollectionSupported",
                required: true,
                type: {
                    name: "Boolean",
                },
            },
            metrics: {
                serializedName: "Metrics",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricPoint",
                        },
                    },
                },
            },
            documents: {
                serializedName: "Documents",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentIngress",
                        },
                    },
                },
            },
            topCpuProcesses: {
                serializedName: "TopCpuProcesses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ProcessCpuData",
                        },
                    },
                },
            },
            collectionConfigurationErrors: {
                serializedName: "CollectionConfigurationErrors",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CollectionConfigurationError",
                        },
                    },
                },
            },
        },
    },
};
exports.MetricPoint = {
    type: {
        name: "Composite",
        className: "MetricPoint",
        modelProperties: {
            name: {
                serializedName: "Name",
                required: true,
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "Value",
                required: true,
                type: {
                    name: "Number",
                },
            },
            weight: {
                serializedName: "Weight",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.DocumentIngress = {
    type: {
        name: "Composite",
        className: "DocumentIngress",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: {
            serializedName: "DocumentType",
            clientName: "documentType",
        },
        modelProperties: {
            documentType: {
                serializedName: "DocumentType",
                required: true,
                type: {
                    name: "String",
                },
            },
            documentStreamIds: {
                serializedName: "DocumentStreamIds",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String",
                        },
                    },
                },
            },
            properties: {
                serializedName: "Properties",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KeyValuePairString",
                        },
                    },
                },
            },
        },
    },
};
exports.KeyValuePairString = {
    type: {
        name: "Composite",
        className: "KeyValuePairString",
        modelProperties: {
            key: {
                serializedName: "key",
                required: true,
                type: {
                    name: "String",
                },
            },
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.ProcessCpuData = {
    type: {
        name: "Composite",
        className: "ProcessCpuData",
        modelProperties: {
            processName: {
                serializedName: "ProcessName",
                required: true,
                type: {
                    name: "String",
                },
            },
            cpuPercentage: {
                serializedName: "CpuPercentage",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.CollectionConfigurationError = {
    type: {
        name: "Composite",
        className: "CollectionConfigurationError",
        modelProperties: {
            collectionConfigurationErrorType: {
                serializedName: "CollectionConfigurationErrorType",
                required: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "Message",
                required: true,
                type: {
                    name: "String",
                },
            },
            fullException: {
                serializedName: "FullException",
                required: true,
                type: {
                    name: "String",
                },
            },
            data: {
                serializedName: "Data",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "KeyValuePairString",
                        },
                    },
                },
            },
        },
    },
};
exports.CollectionConfigurationInfo = {
    type: {
        name: "Composite",
        className: "CollectionConfigurationInfo",
        modelProperties: {
            eTag: {
                serializedName: "ETag",
                required: true,
                type: {
                    name: "String",
                },
            },
            metrics: {
                serializedName: "Metrics",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DerivedMetricInfo",
                        },
                    },
                },
            },
            documentStreams: {
                serializedName: "DocumentStreams",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentStreamInfo",
                        },
                    },
                },
            },
            quotaInfo: {
                serializedName: "QuotaInfo",
                type: {
                    name: "Composite",
                    className: "QuotaConfigurationInfo",
                },
            },
        },
    },
};
exports.DerivedMetricInfo = {
    type: {
        name: "Composite",
        className: "DerivedMetricInfo",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String",
                },
            },
            telemetryType: {
                serializedName: "TelemetryType",
                required: true,
                type: {
                    name: "String",
                },
            },
            filterGroups: {
                serializedName: "FilterGroups",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FilterConjunctionGroupInfo",
                        },
                    },
                },
            },
            projection: {
                serializedName: "Projection",
                required: true,
                type: {
                    name: "String",
                },
            },
            aggregation: {
                serializedName: "Aggregation",
                required: true,
                type: {
                    name: "String",
                },
            },
            backEndAggregation: {
                serializedName: "BackEndAggregation",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.FilterConjunctionGroupInfo = {
    type: {
        name: "Composite",
        className: "FilterConjunctionGroupInfo",
        modelProperties: {
            filters: {
                serializedName: "Filters",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FilterInfo",
                        },
                    },
                },
            },
        },
    },
};
exports.FilterInfo = {
    type: {
        name: "Composite",
        className: "FilterInfo",
        modelProperties: {
            fieldName: {
                serializedName: "FieldName",
                required: true,
                type: {
                    name: "String",
                },
            },
            predicate: {
                serializedName: "Predicate",
                required: true,
                type: {
                    name: "String",
                },
            },
            comparand: {
                serializedName: "Comparand",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.DocumentStreamInfo = {
    type: {
        name: "Composite",
        className: "DocumentStreamInfo",
        modelProperties: {
            id: {
                serializedName: "Id",
                required: true,
                type: {
                    name: "String",
                },
            },
            documentFilterGroups: {
                serializedName: "DocumentFilterGroups",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DocumentFilterConjunctionGroupInfo",
                        },
                    },
                },
            },
        },
    },
};
exports.DocumentFilterConjunctionGroupInfo = {
    type: {
        name: "Composite",
        className: "DocumentFilterConjunctionGroupInfo",
        modelProperties: {
            telemetryType: {
                serializedName: "TelemetryType",
                required: true,
                type: {
                    name: "String",
                },
            },
            filters: {
                serializedName: "Filters",
                type: {
                    name: "Composite",
                    className: "FilterConjunctionGroupInfo",
                },
            },
        },
    },
};
exports.QuotaConfigurationInfo = {
    type: {
        name: "Composite",
        className: "QuotaConfigurationInfo",
        modelProperties: {
            initialQuota: {
                serializedName: "InitialQuota",
                type: {
                    name: "Number",
                },
            },
            maxQuota: {
                serializedName: "MaxQuota",
                required: true,
                type: {
                    name: "Number",
                },
            },
            quotaAccrualRatePerSec: {
                serializedName: "QuotaAccrualRatePerSec",
                required: true,
                type: {
                    name: "Number",
                },
            },
        },
    },
};
exports.ServiceError = {
    type: {
        name: "Composite",
        className: "ServiceError",
        modelProperties: {
            requestId: {
                defaultValue: "00000000-0000-0000-0000-000000000000",
                serializedName: "RequestId",
                required: true,
                type: {
                    name: "String",
                },
            },
            responseDateTime: {
                serializedName: "ResponseDateTime",
                required: true,
                type: {
                    name: "String",
                },
            },
            code: {
                serializedName: "Code",
                required: true,
                type: {
                    name: "String",
                },
            },
            message: {
                serializedName: "Message",
                required: true,
                type: {
                    name: "String",
                },
            },
            exception: {
                serializedName: "Exception",
                required: true,
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.Event = {
    serializedName: "Event",
    type: {
        name: "Composite",
        className: "Event",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: exports.DocumentIngress.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.DocumentIngress.type.modelProperties), { name: {
                constraints: {
                    MaxLength: 512,
                },
                serializedName: "Name",
                type: {
                    name: "String",
                },
            } }),
    },
};
exports.Exception = {
    serializedName: "Exception",
    type: {
        name: "Composite",
        className: "Exception",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: exports.DocumentIngress.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.DocumentIngress.type.modelProperties), { exceptionType: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "ExceptionType",
                type: {
                    name: "String",
                },
            }, exceptionMessage: {
                constraints: {
                    MaxLength: 32768,
                },
                serializedName: "ExceptionMessage",
                type: {
                    name: "String",
                },
            } }),
    },
};
exports.RemoteDependency = {
    serializedName: "RemoteDependency",
    type: {
        name: "Composite",
        className: "RemoteDependency",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: exports.DocumentIngress.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.DocumentIngress.type.modelProperties), { name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "Name",
                type: {
                    name: "String",
                },
            }, commandName: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "CommandName",
                type: {
                    name: "String",
                },
            }, resultCode: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "ResultCode",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "Duration",
                type: {
                    name: "String",
                },
            } }),
    },
};
exports.Request = {
    serializedName: "Request",
    type: {
        name: "Composite",
        className: "Request",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: exports.DocumentIngress.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.DocumentIngress.type.modelProperties), { name: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "Name",
                type: {
                    name: "String",
                },
            }, url: {
                constraints: {
                    MaxLength: 2048,
                },
                serializedName: "Url",
                type: {
                    name: "String",
                },
            }, responseCode: {
                constraints: {
                    MaxLength: 1024,
                },
                serializedName: "ResponseCode",
                type: {
                    name: "String",
                },
            }, duration: {
                serializedName: "Duration",
                type: {
                    name: "String",
                },
            } }),
    },
};
exports.Trace = {
    serializedName: "Trace",
    type: {
        name: "Composite",
        className: "Trace",
        uberParent: "DocumentIngress",
        polymorphicDiscriminator: exports.DocumentIngress.type.polymorphicDiscriminator,
        modelProperties: Object.assign(Object.assign({}, exports.DocumentIngress.type.modelProperties), { message: {
                constraints: {
                    MaxLength: 32768,
                },
                serializedName: "Message",
                type: {
                    name: "String",
                },
            } }),
    },
};
exports.QuickpulseClientIsSubscribedHeaders = {
    type: {
        name: "Composite",
        className: "QuickpulseClientIsSubscribedHeaders",
        modelProperties: {
            xMsQpsSubscribed: {
                serializedName: "x-ms-qps-subscribed",
                type: {
                    name: "String",
                },
            },
            xMsQpsConfigurationEtag: {
                serializedName: "x-ms-qps-configuration-etag",
                type: {
                    name: "String",
                },
            },
            xMsQpsServicePollingIntervalHint: {
                serializedName: "x-ms-qps-service-polling-interval-hint",
                type: {
                    name: "String",
                },
            },
            xMsQpsServiceEndpointRedirectV2: {
                serializedName: "x-ms-qps-service-endpoint-redirect-v2",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.QuickpulseClientPublishHeaders = {
    type: {
        name: "Composite",
        className: "QuickpulseClientPublishHeaders",
        modelProperties: {
            xMsQpsSubscribed: {
                serializedName: "x-ms-qps-subscribed",
                type: {
                    name: "String",
                },
            },
            xMsQpsConfigurationEtag: {
                serializedName: "x-ms-qps-configuration-etag",
                type: {
                    name: "String",
                },
            },
        },
    },
};
exports.discriminators = {
    DocumentIngress: exports.DocumentIngress,
    "DocumentIngress.Event": exports.Event,
    "DocumentIngress.Exception": exports.Exception,
    "DocumentIngress.RemoteDependency": exports.RemoteDependency,
    "DocumentIngress.Request": exports.Request,
    "DocumentIngress.Trace": exports.Trace,
};
//# sourceMappingURL=mappers.js.map