{"version":3,"file":"statsbeat.js","sourceRoot":"","sources":["../../../src/utils/statsbeat.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type {\n  StatsbeatEnvironmentConfig,\n  StatsbeatFeatures,\n  StatsbeatInstrumentations,\n  StatsbeatOption,\n} from \"../types.js\";\nimport {\n  AZURE_MONITOR_STATSBEAT_FEATURES,\n  StatsbeatFeature,\n  StatsbeatFeaturesMap,\n  StatsbeatInstrumentation,\n} from \"../types.js\";\nimport { Logger as InternalLogger } from \"../shared/logging/index.js\";\n\nlet instance: StatsbeatConfiguration;\n\nclass StatsbeatConfiguration {\n  // Initial Statsbeat options\n  private initializedByShim = false;\n  private currentStatsbeatInstrumentations: StatsbeatInstrumentations = {};\n  private currentStatsbeatFeatures: StatsbeatFeatures = {};\n\n  constructor() {\n    // Check for shim initialization upon construction\n    try {\n      if (\n        JSON.parse(process.env[AZURE_MONITOR_STATSBEAT_FEATURES] || \"{}\").feature &\n        StatsbeatFeature.SHIM\n      ) {\n        this.initializedByShim = true;\n      }\n    } catch (error) {\n      InternalLogger.getInstance().error(\n        \"Failed to parse statsbeat config environment variable.\",\n        error,\n      );\n    }\n  }\n\n  public setStatsbeatFeatures = (\n    statsbeatInstrumentations: StatsbeatInstrumentations,\n    statsbeatFeatures: StatsbeatFeatures,\n  ) => {\n    let statsbeatEnv: StatsbeatEnvironmentConfig;\n    try {\n      statsbeatEnv = JSON.parse(process.env[AZURE_MONITOR_STATSBEAT_FEATURES] || \"{}\");\n    } catch (error) {\n      InternalLogger.getInstance().error(\n        \"Failed to parse statsbeat config environment variable.\",\n        error,\n      );\n    }\n    this.currentStatsbeatInstrumentations = {\n      ...this.currentStatsbeatInstrumentations,\n      ...statsbeatInstrumentations,\n    };\n    this.currentStatsbeatFeatures = { ...this.currentStatsbeatFeatures, ...statsbeatFeatures };\n\n    // Set the statsbeat options for community instrumentations based on the environment variable\n    statsbeatInstrumentations = {\n      ...this.currentStatsbeatInstrumentations,\n      amqplib: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.AMQPLIB ? true : false,\n      cucumber: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.CUCUMBER ? true : false,\n      dataloader:\n        statsbeatEnv!.instrumentation & StatsbeatInstrumentation.DATALOADER ? true : false,\n      fs: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.FS ? true : false,\n      lruMemoizer:\n        statsbeatEnv!.instrumentation & StatsbeatInstrumentation.LRU_MEMOIZER ? true : false,\n      mongoose: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.MONGOOSE ? true : false,\n      runtimeNode:\n        statsbeatEnv!.instrumentation & StatsbeatInstrumentation.RUNTIME_NODE ? true : false,\n      socketIo: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.SOCKET_IO ? true : false,\n      tedious: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.TEDIOUS ? true : false,\n      undici: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.UNDICI ? true : false,\n      cassandra: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.CASSANDRA ? true : false,\n      connect: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.CONNECT ? true : false,\n      dns: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.DNS ? true : false,\n      express: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.EXPRESS ? true : false,\n      fastify: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.FASTIFY ? true : false,\n      genericPool:\n        statsbeatEnv!.instrumentation & StatsbeatInstrumentation.GENERIC_POOL ? true : false,\n      graphql: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.GRAPHQL ? true : false,\n      hapi: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.HAPI ? true : false,\n      ioredis: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.IOREDIS ? true : false,\n      knex: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.KNEX ? true : false,\n      koa: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.KOA ? true : false,\n      memcached: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.MEMCACHED ? true : false,\n      mysql2: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.MYSQL2 ? true : false,\n      nestjsCore:\n        statsbeatEnv!.instrumentation & StatsbeatInstrumentation.NESTJS_CORE ? true : false,\n      net: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.NET ? true : false,\n      pino: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.PINO ? true : false,\n      restify: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.RESTIFY ? true : false,\n      router: statsbeatEnv!.instrumentation & StatsbeatInstrumentation.ROUTER ? true : false,\n    };\n\n    let instrumentationBitMap = StatsbeatInstrumentation.NONE;\n\n    const instrumentationArray: Array<StatsbeatOption> = Object.entries(\n      statsbeatInstrumentations,\n    ).map((entry) => {\n      return { option: entry[0], value: entry[1] };\n    });\n\n    // Map the instrumentation options to a bit map\n    for (let i = 0; i < instrumentationArray.length; i++) {\n      if (instrumentationArray[i].value) {\n        instrumentationBitMap |= 2 ** i;\n      }\n    }\n\n    // Create feature bit map\n    let featureBitMap = StatsbeatFeature.NONE;\n\n    if (this.initializedByShim) {\n      this.currentStatsbeatFeatures.shim = true;\n    } else {\n      this.currentStatsbeatFeatures.distro = true;\n    }\n\n    if (statsbeatFeatures.liveMetrics) {\n      this.currentStatsbeatFeatures.liveMetrics = true;\n    }\n\n    const featureArray: Array<StatsbeatOption> = Object.entries(this.currentStatsbeatFeatures).map(\n      (entry) => {\n        return { option: entry[0], value: entry[1] };\n      },\n    );\n\n    // Map the feature options to a bit map\n    for (let i = 0; i < featureArray.length; i++) {\n      if (featureArray[i].value) {\n        featureBitMap |= StatsbeatFeaturesMap.get(featureArray[i].option)!;\n      }\n    }\n\n    // Merge old statsbeat options with new statsbeat options overriding any common properties\n    try {\n      const currentFeaturesBitMap = Number(process.env[AZURE_MONITOR_STATSBEAT_FEATURES]);\n      if (!isNaN(currentFeaturesBitMap)) {\n        featureBitMap |= currentFeaturesBitMap;\n      }\n      process.env[AZURE_MONITOR_STATSBEAT_FEATURES] = JSON.stringify({\n        instrumentation: instrumentationBitMap,\n        feature: featureBitMap,\n      });\n    } catch (error) {\n      InternalLogger.getInstance().error(\"Failed call to JSON.stringify.\", error);\n    }\n  };\n}\n\n/**\n * Singleton Statsbeat instance.\n * @internal\n */\nexport function getInstance(): StatsbeatConfiguration {\n  if (!instance) {\n    instance = new StatsbeatConfiguration();\n  }\n  return instance;\n}\n"]}