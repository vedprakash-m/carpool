{"version":3,"file":"collectionConfigurationErrorTracker.js","sourceRoot":"","sources":["../../../../../src/metrics/quickpulse/filtering/collectionConfigurationErrorTracker.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAIlC,MAAa,mCAAmC;IAc9C;QAbA;;;;WAIG;QACK,yBAAoB,GAAmC,EAAE,CAAC;QAClE;;;;WAIG;QACK,kBAAa,GAAmC,EAAE,CAAC;QAGzD,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEM,kBAAkB,CAAC,KAAmC;QAC3D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAEM,eAAe,CAAC,KAAmC;QACxD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAEM,SAAS;QACd,OAAO,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IAC9D,CAAC;IAEM,kBAAkB;QACvB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;IAC1B,CAAC;IAEM,yBAAyB;QAC9B,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACjC,CAAC;CACF;AAtCD,kFAsCC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport type { CollectionConfigurationError } from \"../../../generated/index.js\";\n\nexport class CollectionConfigurationErrorTracker {\n  /**\n   * This list represents the errors that are found when the response from a ping or post is initially parsed.\n   * The errors in this list are expected to stay the same across multiple post requests of the same configuration\n   * id, and so will only be changed when a new configuration gets parsed.\n   */\n  private validationTimeErrors: CollectionConfigurationError[] = [];\n  /**\n   * This list represents errors that can't be caught while parsing the response - such as validation errors that would occur when\n   * analyzing customDimensions present in incoming spans/logs, or when creating a projection. These errors aren't expected to be the\n   * same across post requests of the same configuration id and so is expected to be regenerated for every post request.\n   */\n  private runTimeErrors: CollectionConfigurationError[] = [];\n\n  constructor() {\n    this.validationTimeErrors = [];\n    this.runTimeErrors = [];\n  }\n\n  public addValidationError(error: CollectionConfigurationError): void {\n    this.validationTimeErrors.push(error);\n  }\n\n  public addRunTimeError(error: CollectionConfigurationError): void {\n    this.runTimeErrors.push(error);\n  }\n\n  public getErrors(): CollectionConfigurationError[] {\n    return this.validationTimeErrors.concat(this.runTimeErrors);\n  }\n\n  public clearRunTimeErrors(): void {\n    this.runTimeErrors = [];\n  }\n\n  public clearValidationTimeErrors(): void {\n    this.validationTimeErrors = [];\n  }\n}\n"]}