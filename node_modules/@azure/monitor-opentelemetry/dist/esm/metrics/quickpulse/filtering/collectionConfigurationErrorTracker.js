// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
export class CollectionConfigurationErrorTracker {
    constructor() {
        /**
         * This list represents the errors that are found when the response from a ping or post is initially parsed.
         * The errors in this list are expected to stay the same across multiple post requests of the same configuration
         * id, and so will only be changed when a new configuration gets parsed.
         */
        this.validationTimeErrors = [];
        /**
         * This list represents errors that can't be caught while parsing the response - such as validation errors that would occur when
         * analyzing customDimensions present in incoming spans/logs, or when creating a projection. These errors aren't expected to be the
         * same across post requests of the same configuration id and so is expected to be regenerated for every post request.
         */
        this.runTimeErrors = [];
        this.validationTimeErrors = [];
        this.runTimeErrors = [];
    }
    addValidationError(error) {
        this.validationTimeErrors.push(error);
    }
    addRunTimeError(error) {
        this.runTimeErrors.push(error);
    }
    getErrors() {
        return this.validationTimeErrors.concat(this.runTimeErrors);
    }
    clearRunTimeErrors() {
        this.runTimeErrors = [];
    }
    clearValidationTimeErrors() {
        this.validationTimeErrors = [];
    }
}
//# sourceMappingURL=collectionConfigurationErrorTracker.js.map