import type { CollectionConfigurationError } from "../../../generated/index.js";
export declare class CollectionConfigurationErrorTracker {
    /**
     * This list represents the errors that are found when the response from a ping or post is initially parsed.
     * The errors in this list are expected to stay the same across multiple post requests of the same configuration
     * id, and so will only be changed when a new configuration gets parsed.
     */
    private validationTimeErrors;
    /**
     * This list represents errors that can't be caught while parsing the response - such as validation errors that would occur when
     * analyzing customDimensions present in incoming spans/logs, or when creating a projection. These errors aren't expected to be the
     * same across post requests of the same configuration id and so is expected to be regenerated for every post request.
     */
    private runTimeErrors;
    constructor();
    addValidationError(error: CollectionConfigurationError): void;
    addRunTimeError(error: CollectionConfigurationError): void;
    getErrors(): CollectionConfigurationError[];
    clearRunTimeErrors(): void;
    clearValidationTimeErrors(): void;
}
//# sourceMappingURL=collectionConfigurationErrorTracker.d.ts.map