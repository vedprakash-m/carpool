{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../../src/metrics/quickpulse/utils.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAkBlC,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAE7D,OAAO,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,oBAAoB,CAAC;AAC9D,OAAO,EACL,0BAA0B,EAC1B,sBAAsB,EACtB,6BAA6B,EAC7B,iCAAiC,EACjC,6BAA6B,EAC7B,kBAAkB,EAClB,mBAAmB,EACnB,sBAAsB,EACtB,oBAAoB,EACpB,yBAAyB,EACzB,oBAAoB,EACpB,gBAAgB,EAChB,qBAAqB,EACrB,qBAAqB,EACrB,mBAAmB,EACnB,sBAAsB,EACtB,kBAAkB,EAClB,mBAAmB,EACnB,oBAAoB,EACpB,cAAc,EACd,aAAa,EACb,oBAAoB,EACpB,eAAe,EACf,8BAA8B,EAC9B,yBAAyB,EACzB,wBAAwB,EACxB,oBAAoB,EACpB,aAAa,EACb,iBAAiB,EACjB,yBAAyB,EACzB,oBAAoB,EACpB,wBAAwB,EACxB,wBAAwB,EACxB,gBAAgB,EAChB,gBAAgB,EAChB,sBAAsB,GACvB,MAAM,qCAAqC,CAAC;AAC7C,OAAO,EAAE,QAAQ,EAAE,oBAAoB,EAAE,MAAM,qBAAqB,CAAC;AAErE,OAAO,EAAE,aAAa,EAAE,MAAM,4BAA4B,CAAC;AAC3D,OAAO,EACL,iCAAiC,EACjC,yBAAyB,EACzB,mCAAmC,EACnC,oBAAoB,EACpB,gBAAgB,GACjB,MAAM,gBAAgB,CAAC;AAQxB,OAAO,EACL,qBAAqB,EACrB,kCAAkC,EAClC,eAAe,EACf,oBAAoB,EACpB,kBAAkB,GACnB,MAAM,YAAY,CAAC;AACpB,OAAO,EAAE,WAAW,EAAE,MAAM,uBAAuB,CAAC;AACpD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAE5D,OAAO,EAAE,mBAAmB,EAAE,OAAO,EAAE,oBAAoB,EAAE,MAAM,aAAa,CAAC;AACjF,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AAEvD,mCAAmC;AACnC,MAAM,UAAU,aAAa;;IAC3B,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;IACzC,MAAM,oBAAoB,GAAG,QAAQ,CAAC,iCAAiC,CAAC,CAAC;IACzE,MAAM,OAAO,GAAG,iBAAiB,EAAE,CAAC;IACpC,MAAM,kBAAkB,GAAG,GAAG,MAAA,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,mCAAI,EAAE,OAAO,WAAW,QAAQ,oBAAoB,IAAI,OAAO,EAAE,CAAC;IACjI,OAAO,kBAAkB,CAAC;AAC5B,CAAC;AAED,wCAAwC;AACxC,MAAM,UAAU,iBAAiB;IAC/B,IAAI,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,EAAE,CAAC;QACnD,OAAO,MAAM,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,EAAE,CAAC;IAChE,CAAC;SAAM,CAAC;QACN,OAAO,MAAM,mCAAmC,EAAE,CAAC;IACrD,CAAC;AACH,CAAC;AAED,wCAAwC;AACxC,iFAAiF;AACjF,MAAM,UAAU,YAAY;IAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC,EAAE,CAAC;QACvC,MAAM,gBAAgB,GACpB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,KAAK,MAAM;YAC/C,CAAC,CAAC,gBAAgB,CAAC,eAAe;YAClC,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,oBAAoB,CAAC;YAC/B,GAAG,mBAAmB,EAAE,GAAG,WAAW,EAAE,GAAG,gBAAgB,GAAG,CAAC;IACnE,CAAC;AACH,CAAC;AAED,MAAM,UAAU,oCAAoC,CAClD,OAAwB,EACxB,uBAA4C,EAC5C,SAA4B,EAC5B,MAAsC,EACtC,mBAAwC;IAExC,MAAM,YAAY,GAAkB,EAAE,CAAC;IACvC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,EAAE;QAC3C,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;YACrC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBACtC,MAAM,WAAW,GAAgB;oBAC/B,MAAM,EAAE,CAAC;oBACT,IAAI,EAAE,EAAE;oBACR,KAAK,EAAE,CAAC;iBACT,CAAC;gBAEF,8FAA8F;gBAC9F,QAAQ,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;oBAC/B,KAAK,kCAAkC,CAAC,cAAc;wBACpD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,cAAc,CAAC;wBACxD,MAAM;oBACR,KAAK,kCAAkC,CAAC,mBAAmB;wBACzD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,mBAAmB,CAAC;wBAC7D,MAAM;oBACR,KAAK,kCAAkC,CAAC,uBAAuB;wBAC7D,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,uBAAuB,CAAC;wBACjE,MAAM;oBACR,KAAK,kCAAkC,CAAC,eAAe;wBACrD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,eAAe,CAAC;wBACzD,MAAM;oBACR,KAAK,kCAAkC,CAAC,cAAc;wBACpD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,cAAc,CAAC;wBACxD,MAAM;oBACR,KAAK,kCAAkC,CAAC,yBAAyB;wBAC/D,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,yBAAyB,CAAC;wBACnE,MAAM;oBACR,KAAK,kCAAkC,CAAC,gBAAgB;wBACtD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,gBAAgB,CAAC;wBAC1D,MAAM;oBACR,KAAK,kCAAkC,CAAC,oBAAoB;wBAC1D,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,oBAAoB,CAAC;wBAC9D,MAAM;oBACR,KAAK,kCAAkC,CAAC,YAAY;wBAClD,WAAW,CAAC,IAAI,GAAG,qBAAqB,CAAC,YAAY,CAAC;wBACtD,MAAM;oBACR;wBACE,WAAW,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC;gBAC9C,CAAC;gBAED,IACE,MAAM,CAAC,aAAa,KAAK,aAAa,CAAC,GAAG;oBAC1C,MAAM,CAAC,aAAa,KAAK,aAAa,CAAC,KAAK,EAC5C,CAAC;oBACD,WAAW,CAAC,KAAK,GAAG,SAAS,CAAC,KAAe,CAAC;gBAChD,CAAC;qBAAM,CAAC;oBACN,WAAW,CAAC,KAAK,GAAI,SAAS,CAAC,KAAmB,CAAC,GAAG,IAAI,CAAC,CAAC;gBAC9D,CAAC;gBACD,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;gBAE/B,iEAAiE;gBACjE,2DAA2D;gBAC3D,IACE,WAAW,CAAC,IAAI,KAAK,qBAAqB,CAAC,cAAc;oBACzD,WAAW,CAAC,IAAI,KAAK,qBAAqB,CAAC,yBAAyB,EACpE,CAAC;oBACD,MAAM,cAAc,GAAgB;wBAClC,MAAM,EAAE,CAAC;wBACT,IAAI,EACF,WAAW,CAAC,IAAI,KAAK,qBAAqB,CAAC,cAAc;4BACvD,CAAC,CAAC,qBAAqB,CAAC,eAAe;4BACvC,CAAC,CAAC,qBAAqB,CAAC,cAAc;wBAC1C,KAAK,EAAE,SAAS,CAAC,KAAe;qBACjC,CAAC;oBACF,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;gBACpC,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;IAEH,mBAAmB,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE,EAAE,EAAE;QACxC,MAAM,WAAW,GAAgB;YAC/B,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,KAAK;SACb,CAAC;QACF,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACjC,CAAC,CAAC,CAAC;IAEH,MAAM,mBAAmB,mCACpB,uBAAuB,KAC1B,SAAS,EAAE,IAAI,IAAI,EAAE,EACrB,OAAO,EAAE,YAAY,EACrB,SAAS,EAAE,SAAS,EACpB,6BAA6B,EAAE,MAAM,GACtC,CAAC;IACF,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAC/B,CAAC;AAED,SAAS,kBAAkB,CAAC,YAAoB;IAC9C,MAAM,OAAO,GAAG,YAAY,GAAG,IAAI,CAAC;IACpC,OAAO,KAAK,OAAO,GAAG,CAAC;AACzB,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,IAAkB;IAC5C,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACrE,UAAU;QACV,OAAO,cAAc,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;SAAM,CAAC;QACN,aAAa;QACb,OAAO,iBAAiB,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;AACH,CAAC;AAED,MAAM,UAAU,uBAAuB,CACrC,eAA2B,EAC3B,cAA0B;IAE1B,MAAM,aAAa,GAAkB;QACnC,OAAO,EAAE,eAAe,CAAC,0BAA0B,CAAW;QAC9D,UAAU,EAAE,eAAe,CAAC,6BAA6B,CAAW;QACpE,gBAAgB,EAAE,8BAA8B,CAAC,cAAc,CAAC;KACjE,CAAC;IACF,OAAO,aAAa,CAAC;AACvB,CAAC;AAED,8EAA8E;AAC9E,SAAS,cAAc,CAAC,IAAkB;IACxC,MAAM,WAAW,GAAgB;QAC/B,GAAG,EAAE,EAAE;QACP,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7C,YAAY,EAAE,CAAC;QACf,OAAO,EAAE,KAAK;QACd,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE;QACrB,gBAAgB,EAAE,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC;KAClE,CAAC;IAEF,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClD,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;IACtE,IAAI,UAAU,EAAE,CAAC;QACf,WAAW,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1C,IAAI,GAAG,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;YAClC,MAAM,MAAM,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YACxC,WAAW,CAAC,IAAI,GAAG,GAAG,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;QACxD,CAAC;aAAM,CAAC;YACN,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,2DAA2D,CAAC,CAAC;QACzF,CAAC;QACD,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,IAAI,cAAc,EAAE,CAAC;YACnB,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;SAAM,IAAI,cAAc,EAAE,CAAC;QAC1B,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;IACpD,CAAC;IACD,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK,IAAI,WAAW,CAAC,YAAY,GAAG,GAAG,CAAC;IAClG,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,iFAAiF;AACjF,SAAS,iBAAiB,CAAC,IAAkB;IAC3C,MAAM,cAAc,GAAmB;QACrC,MAAM,EAAE,EAAE;QACV,QAAQ,EAAE,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC7C,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,cAAc,CAAC,KAAK;QAClD,IAAI,EAAE,IAAI,CAAC,IAAI;QACf,UAAU,EAAE,CAAC;QACb,IAAI,EAAE,EAAE;QACR,IAAI,EAAE,EAAE;QACR,gBAAgB,EAAE,8BAA8B,CAAC,IAAI,CAAC,UAAU,CAAC;KAClE,CAAC;IAEF,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpC,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,YAAY,CAAC;IACrD,CAAC;IACD,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;QACzD,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,MAAM,CAAC;IAC/C,CAAC;IAED,MAAM,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClD,MAAM,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;IACrD,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,CAAC;IACvD,kBAAkB;IAClB,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,IAAI,OAAO,EAAE,CAAC;YACZ,IAAI,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;gBAClC,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC/C,cAAc,CAAC,IAAI,GAAG,GAAG,UAAU,IAAI,aAAa,CAAC,QAAQ,EAAE,CAAC;YAClE,CAAC;iBAAM,CAAC;gBACN,MAAM,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,8DAA8D,CAAC,CAAC;YAC5F,CAAC;QACH,CAAC;QACD,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;QAC3C,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,MAAM,cAAc,GAAG,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC1D,IAAI,cAAc,EAAE,CAAC;YACnB,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACrD,CAAC;QACD,IAAI,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClD,IAAI,MAAM,EAAE,CAAC;YACX,IAAI,CAAC;gBACH,sBAAsB;gBACtB,MAAM,SAAS,GAAG,IAAI,MAAM,CAAC,8BAA8B,CAAC,CAAC;gBAC7D,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACnC,IAAI,GAAG,KAAK,IAAI,EAAE,CAAC;oBACjB,MAAM,QAAQ,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACxB,MAAM,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpB,IACE,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,KAAK,MAAM,CAAC;wBACzC,CAAC,QAAQ,KAAK,MAAM,IAAI,IAAI,KAAK,KAAK,CAAC,EACvC,CAAC;wBACD,YAAY;wBACZ,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;oBACpC,CAAC;gBACH,CAAC;YACH,CAAC;YAAC,OAAO,EAAO,EAAE,CAAC;gBACjB,WAAW;YACb,CAAC;YACD,cAAc,CAAC,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;QACtC,CAAC;IACH,CAAC;IACD,gBAAgB;SACX,IAAI,QAAQ,EAAE,CAAC;QAClB,2EAA2E;QAC3E,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,oBAAoB,EAAE,CAAC;YAC9C,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC;QAC9C,CAAC;aAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,yBAAyB,EAAE,CAAC;YAC1D,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,UAAU,CAAC;QACnD,CAAC;aAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,sBAAsB,EAAE,CAAC;YACvD,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,OAAO,CAAC;QAChD,CAAC;aAAM,IAAI,MAAM,CAAC,QAAQ,CAAC,KAAK,oBAAoB,EAAE,CAAC;YACrD,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,KAAK,CAAC;QAC9C,CAAC;aAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC;YACrC,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACzC,CAAC;QACD,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAC3D,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;QAC3D,IAAI,WAAW,EAAE,CAAC;YAChB,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAC5C,CAAC;aAAM,IAAI,WAAW,EAAE,CAAC;YACvB,cAAc,CAAC,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAC5C,CAAC;QACD,MAAM,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;QACjD,IAAI,MAAM,EAAE,CAAC;YACX,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,IAAI,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC;QACvE,CAAC;aAAM,CAAC;YACN,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,EAAE,CAAC,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC;QAC/D,CAAC;IACH,CAAC;IAED,kBAAkB;SACb,IAAI,SAAS,EAAE,CAAC;QACnB,IAAI,SAAS,KAAK,eAAe,CAAC,GAAG,EAAE,CAAC;YACtC,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,GAAG,CAAC;QAC5C,CAAC;aAAM,CAAC;YACN,cAAc,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;QAC7C,CAAC;QACD,MAAM,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;QACtE,IAAI,cAAc,EAAE,CAAC;YACnB,cAAc,CAAC,UAAU,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACrD,CAAC;QACD,MAAM,MAAM,GAAG,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,IAAI,MAAM,EAAE,CAAC;YACX,cAAc,CAAC,MAAM,GAAG,GAAG,MAAM,EAAE,CAAC;QACtC,CAAC;aAAM,IAAI,SAAS,EAAE,CAAC;YACrB,cAAc,CAAC,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC5C,CAAC;IACH,CAAC;IACD,OAAO,cAAc,CAAC;AACxB,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,GAAc;IACvC,MAAM,UAAU,GAAG,8BAA8B,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;IAClE,IAAI,oBAAoB,CAAC,GAAG,CAAC,EAAE,CAAC;QAC9B,OAAO;YACL,gEAAgE;YAChE,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;YAC3D,gEAAgE;YAChE,UAAU,EAAE,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,6BAA6B,CAAC,CAAC;YACjE,gBAAgB,EAAE,UAAU;SAC7B,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,OAAO;YACL,gEAAgE;YAChE,OAAO,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;YACzB,gBAAgB,EAAE,UAAU;SAC7B,CAAC;IACJ,CAAC;AACH,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,IAAmB,EAAE,aAAsB;IACxE,IAAI,eAAe,CAAC,IAAI,CAAC,IAAI,aAAa,EAAE,CAAC;QAC3C,OAAO;YACL,YAAY,EAAE,iBAAiB,CAAC,SAAS;YACzC,gBAAgB,EAAE,IAAI,CAAC,OAAO;YAC9B,aAAa,EAAE,aAAa;YAC5B,UAAU,EAAE,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC;SACzD,CAAC;IACJ,CAAC;SAAM,CAAC;QACN,QAAQ;QACR,OAAO;YACL,YAAY,EAAE,iBAAiB,CAAC,KAAK;YACrC,OAAO,EAAG,IAAkB,CAAC,OAAO;YACpC,UAAU,EAAE,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC;SACzD,CAAC;IACJ,CAAC;AACH,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,IAAmB;IAC/C,OAAQ,IAAoB,CAAC,GAAG,KAAK,SAAS,CAAC;AACjD,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,IAAmB;IAClD,OAAQ,IAAuB,CAAC,MAAM,KAAK,SAAS,CAAC;AACvD,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,IAAmB;IAC7C,OAAQ,IAAkB,CAAC,OAAO,KAAK,SAAS,IAAK,IAAY,CAAC,UAAU,KAAK,SAAS,CAAC;AAC7F,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,IAAmB;IACjD,OAAQ,IAAsB,CAAC,UAAU,KAAK,SAAS,CAAC;AAC1D,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,aAA4B;IAC1D,IAAI,QAAQ,GAA+B;QACzC,YAAY,EAAE,iBAAiB,CAAC,OAAO;KACxC,CAAC;IAEF,IAAI,aAAa,CAAC,aAAa,CAAC,EAAE,CAAC;QACjC,QAAQ,GAAG;YACT,YAAY,EAAE,iBAAiB,CAAC,OAAO;YACvC,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,GAAG,EAAE,aAAa,CAAC,GAAG;YACtB,YAAY,EAAE,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;YAChD,QAAQ,EAAE,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC;SACrD,CAAC;IACJ,CAAC;SAAM,IAAI,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC;QAC3C,QAAQ,GAAG;YACT,YAAY,EAAE,iBAAiB,CAAC,gBAAgB;YAChD,IAAI,EAAE,aAAa,CAAC,IAAI;YACxB,WAAW,EAAE,aAAa,CAAC,IAAI;YAC/B,UAAU,EAAE,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC;YAC5C,QAAQ,EAAE,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC;SACrD,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,UAAU,GAAG,qBAAqB,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;IAC5E,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,SAAS,8BAA8B,CACrC,UAAuC;IAEvC,MAAM,UAAU,GAAG,IAAI,GAAG,EAAkB,CAAC;IAC7C,IAAI,UAAU,EAAE,CAAC;QACf,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;YAC1C,IACE,CAAC,CACC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC;gBACtB,oBAAoB,CAAC,QAAQ,CAAC,GAAG,CAAC;gBAClC,kBAAkB,CAAC,QAAQ,CAAC,GAAU,CAAC,CACxC,EACD,CAAC;gBACD,gEAAgE;gBAChE,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,SAAS,qBAAqB,CAAC,GAAwB;IACrD,MAAM,IAAI,GAAyB,EAAE,CAAC;IACtC,GAAG,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;QACzB,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;IACH,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,MAAM,CAAC,UAAsB;IACpC,IAAI,CAAC,UAAU,EAAE,CAAC;QAChB,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;IAC7C,IAAI,UAAU,EAAE,CAAC;QACf,MAAM,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,OAAO,EAAE,CAAC;YACZ,OAAO,MAAM,CAAC,OAAO,CAAC,CAAC;QACzB,CAAC;aAAM,CAAC;YACN,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;YAC7C,MAAM,UAAU,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;YAC7C,IAAI,UAAU,IAAI,UAAU,EAAE,CAAC;gBAC7B,MAAM,QAAQ,GAAG,WAAW,CAAC,UAAU,CAAC,CAAC;gBACzC,IAAI,QAAQ,EAAE,CAAC;oBACb,OAAO,GAAG,UAAU,MAAM,QAAQ,GAAG,UAAU,EAAE,CAAC;gBACpD,CAAC;qBAAM,CAAC;oBACN,MAAM,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC;oBAC/C,IAAI,WAAW,EAAE,CAAC;wBAChB,MAAM,WAAW,GAAG,cAAc,CAAC,UAAU,CAAC,CAAC;wBAC/C,IAAI,WAAW,EAAE,CAAC;4BAChB,OAAO,GAAG,UAAU,MAAM,WAAW,IAAI,WAAW,GAAG,UAAU,EAAE,CAAC;wBACtE,CAAC;6BAAM,CAAC;4BACN,MAAM,SAAS,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC;4BACxC,IAAI,SAAS,EAAE,CAAC;gCACd,OAAO,GAAG,UAAU,MAAM,SAAS,IAAI,WAAW,GAAG,UAAU,EAAE,CAAC;4BACpE,CAAC;wBACH,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED;;;;;;GAMG;AACH,MAAM,UAAU,mBAAmB;IACjC,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,cAAc,CAAC,GAAG,KAAK,CAAC;AAC/C,CAAC;AAED,MAAM,UAAU,8BAA8B,CAAC,SAAiB;IAC9D,oEAAoE;IACpE,qCAAqC;IACrC,gGAAgG;IAChG,mGAAmG;IACnG,iEAAiE;IACjE,MAAM,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACnC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QACvB,OAAO,GAAG,CAAC;IACb,CAAC;IACD,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,MAAM,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACrC,MAAM,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtC,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;QAC3B,OAAO,GAAG,CAAC;IACb,CAAC;IACD,MAAM,KAAK,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,MAAM,IAAI,GAAG,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAEtC,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;QACpE,OAAO,GAAG,CAAC;IACb,CAAC;IAED,OAAO,OAAO,GAAG,IAAI,GAAG,OAAO,GAAG,KAAK,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,GAAG,QAAQ,CAAC;AAC9E,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,UAAsB;IAC9C,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,yBAAyB,CAAC,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC3F,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,UAAsB;IACjD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,IAAI,UAAU,CAAC,wBAAwB,CAAC,CAAC,CAAC;IAC9F,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,UAAsB;IAC/C,+DAA+D;IAC/D,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,IAAI,UAAU,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC,CAAC;IAClF,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,UAAsB;IAClD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,wBAAwB,CAAC,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC1F,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,UAAsB;IACtD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CACX,UAAU,CAAC,8BAA8B,CAAC,IAAI,UAAU,CAAC,yBAAyB,CAAC,CACpF,CAAC;IACJ,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,UAAsB;IAClD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,UAAU,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACjF,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,UAAsB;IAClD,IAAI,UAAU,EAAE,CAAC;QACf,IAAI,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC;YAC9B,OAAO,MAAM,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3C,CAAC;QACD,IAAI,UAAU,CAAC,cAAc,CAAC,EAAE,CAAC;YAC/B,OAAO,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,CAAC;QAC5C,CAAC;QACD,OAAO,MAAM,CAAC,UAAU,CAAC,oBAAoB,CAAC,IAAI,EAAE,CAAC,CAAC;IACxD,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,UAAsB;IAChD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACnF,CAAC;IACD,OAAO;AACT,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,UAAsB;IACnD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,mBAAmB,CAAC,IAAI,UAAU,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC7F,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,UAAsB;IACnD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,UAAU,CAAC,sBAAsB,CAAC,IAAI,EAAE,CAAC,CAAC;IAC1F,CAAC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,UAAsB;IACnD,IAAI,UAAU,EAAE,CAAC;QACf,OAAO,MAAM,CACX,UAAU,CAAC,gBAAgB,CAAC;YAC1B,UAAU,CAAC,gBAAgB,CAAC;YAC5B,UAAU,CAAC,sBAAsB,CAAC,CACrC,CAAC;IACJ,CAAC;IACD,OAAO;AACT,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n/* eslint-disable @typescript-eslint/no-unsafe-enum-comparison */\n\nimport type { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\nimport type { LogRecord } from \"@opentelemetry/sdk-logs\";\nimport type {\n  DocumentIngress,\n  Exception,\n  KeyValuePairString,\n  MetricPoint,\n  MonitoringDataPoint,\n  RemoteDependency,\n  /* eslint-disable-next-line @typescript-eslint/no-redeclare */\n  Request,\n  Trace,\n  CollectionConfigurationError,\n} from \"../../generated/index.js\";\nimport { KnownDocumentType } from \"../../generated/index.js\";\nimport type { Attributes } from \"@opentelemetry/api\";\nimport { SpanKind, SpanStatusCode } from \"@opentelemetry/api\";\nimport {\n  SEMATTRS_EXCEPTION_MESSAGE,\n  SEMATTRS_NET_PEER_PORT,\n  SEMATTRS_RPC_GRPC_STATUS_CODE,\n  SEMRESATTRS_TELEMETRY_SDK_VERSION,\n  SEMATTRS_EXCEPTION_STACKTRACE,\n  SEMATTRS_DB_SYSTEM,\n  SEMATTRS_RPC_SYSTEM,\n  DBSYSTEMVALUES_MONGODB,\n  DBSYSTEMVALUES_MYSQL,\n  DBSYSTEMVALUES_POSTGRESQL,\n  DBSYSTEMVALUES_REDIS,\n  SEMATTRS_DB_NAME,\n  SEMATTRS_DB_OPERATION,\n  SEMATTRS_DB_STATEMENT,\n  ATTR_CLIENT_ADDRESS,\n  SEMATTRS_NET_PEER_NAME,\n  SEMATTRS_HTTP_HOST,\n  ATTR_SERVER_ADDRESS,\n  SEMATTRS_HTTP_TARGET,\n  ATTR_URL_QUERY,\n  ATTR_URL_PATH,\n  SEMATTRS_HTTP_SCHEME,\n  ATTR_URL_SCHEME,\n  ATTR_HTTP_RESPONSE_STATUS_CODE,\n  SEMATTRS_HTTP_STATUS_CODE,\n  ATTR_HTTP_REQUEST_METHOD,\n  SEMATTRS_HTTP_METHOD,\n  ATTR_URL_FULL,\n  SEMATTRS_HTTP_URL,\n  ATTR_NETWORK_PEER_ADDRESS,\n  SEMATTRS_NET_PEER_IP,\n  ATTR_USER_AGENT_ORIGINAL,\n  SEMATTRS_HTTP_USER_AGENT,\n  ATTR_SERVER_PORT,\n  ATTR_CLIENT_PORT,\n  SEMATTRS_NET_HOST_PORT,\n} from \"@opentelemetry/semantic-conventions\";\nimport { SDK_INFO, hrTimeToMilliseconds } from \"@opentelemetry/core\";\nimport type { Histogram, ResourceMetrics } from \"@opentelemetry/sdk-metrics\";\nimport { DataPointType } from \"@opentelemetry/sdk-metrics\";\nimport {\n  APPLICATION_INSIGHTS_SHIM_VERSION,\n  AZURE_MONITOR_AUTO_ATTACH,\n  AZURE_MONITOR_OPENTELEMETRY_VERSION,\n  AZURE_MONITOR_PREFIX,\n  AttachTypePrefix,\n} from \"../../types.js\";\nimport type {\n  RequestData,\n  DependencyData,\n  ExceptionData,\n  TraceData,\n  TelemetryData,\n} from \"./types.js\";\nimport {\n  QuickPulseMetricNames,\n  QuickPulseOpenTelemetryMetricNames,\n  DependencyTypes,\n  legacySemanticValues,\n  httpSemanticValues,\n} from \"./types.js\";\nimport { getOsPrefix } from \"../../utils/common.js\";\nimport { getResourceProvider } from \"../../utils/common.js\";\nimport type { LogAttributes } from \"@opentelemetry/api-logs\";\nimport { getDependencyTarget, isSqlDB, isExceptionTelemetry } from \"../utils.js\";\nimport { Logger } from \"../../shared/logging/index.js\";\n\n/** Get the internal SDK version */\nexport function getSdkVersion(): string {\n  const { nodeVersion } = process.versions;\n  const opentelemetryVersion = SDK_INFO[SEMRESATTRS_TELEMETRY_SDK_VERSION];\n  const version = getSdkVersionType();\n  const internalSdkVersion = `${process.env[AZURE_MONITOR_PREFIX] ?? \"\"}node${nodeVersion}:otel${opentelemetryVersion}:${version}`;\n  return internalSdkVersion;\n}\n\n/** Get the internal SDK version type */\nexport function getSdkVersionType(): string {\n  if (process.env[APPLICATION_INSIGHTS_SHIM_VERSION]) {\n    return `sha${process.env[APPLICATION_INSIGHTS_SHIM_VERSION]}`;\n  } else {\n    return `dst${AZURE_MONITOR_OPENTELEMETRY_VERSION}`;\n  }\n}\n\n// eslint-disable-next-line tsdoc/syntax\n/** Set the version prefix to a string in the format \"{ResourceProvider}{OS}m_ */\nexport function setSdkPrefix(): void {\n  if (!process.env[AZURE_MONITOR_PREFIX]) {\n    const prefixAttachType: string =\n      process.env[AZURE_MONITOR_AUTO_ATTACH] === \"true\"\n        ? AttachTypePrefix.INTEGRATED_AUTO\n        : AttachTypePrefix.MANUAL;\n    process.env[AZURE_MONITOR_PREFIX] =\n      `${getResourceProvider()}${getOsPrefix()}${prefixAttachType}_`;\n  }\n}\n\nexport function resourceMetricsToQuickpulseDataPoint(\n  metrics: ResourceMetrics,\n  baseMonitoringDataPoint: MonitoringDataPoint,\n  documents: DocumentIngress[],\n  errors: CollectionConfigurationError[],\n  derivedMetricValues: Map<string, number>,\n): MonitoringDataPoint[] {\n  const metricPoints: MetricPoint[] = [];\n  metrics.scopeMetrics.forEach((scopeMetric) => {\n    scopeMetric.metrics.forEach((metric) => {\n      metric.dataPoints.forEach((dataPoint) => {\n        const metricPoint: MetricPoint = {\n          weight: 1,\n          name: \"\",\n          value: 0,\n        };\n\n        // Update name to expected value in Quickpulse, needed because those names are invalid in OTel\n        switch (metric.descriptor.name) {\n          case QuickPulseOpenTelemetryMetricNames.PHYSICAL_BYTES:\n            metricPoint.name = QuickPulseMetricNames.PHYSICAL_BYTES;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.DEPENDENCY_DURATION:\n            metricPoint.name = QuickPulseMetricNames.DEPENDENCY_DURATION;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.DEPENDENCY_FAILURE_RATE:\n            metricPoint.name = QuickPulseMetricNames.DEPENDENCY_FAILURE_RATE;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.DEPENDENCY_RATE:\n            metricPoint.name = QuickPulseMetricNames.DEPENDENCY_RATE;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.EXCEPTION_RATE:\n            metricPoint.name = QuickPulseMetricNames.EXCEPTION_RATE;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.PROCESSOR_TIME_NORMALIZED:\n            metricPoint.name = QuickPulseMetricNames.PROCESSOR_TIME_NORMALIZED;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.REQUEST_DURATION:\n            metricPoint.name = QuickPulseMetricNames.REQUEST_DURATION;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.REQUEST_FAILURE_RATE:\n            metricPoint.name = QuickPulseMetricNames.REQUEST_FAILURE_RATE;\n            break;\n          case QuickPulseOpenTelemetryMetricNames.REQUEST_RATE:\n            metricPoint.name = QuickPulseMetricNames.REQUEST_RATE;\n            break;\n          default:\n            metricPoint.name = metric.descriptor.name;\n        }\n\n        if (\n          metric.dataPointType === DataPointType.SUM ||\n          metric.dataPointType === DataPointType.GAUGE\n        ) {\n          metricPoint.value = dataPoint.value as number;\n        } else {\n          metricPoint.value = (dataPoint.value as Histogram).sum || 0;\n        }\n        metricPoints.push(metricPoint);\n\n        // TODO: remove the metric points with the old metric names after\n        // UI side has done their changes to support the new names.\n        if (\n          metricPoint.name === QuickPulseMetricNames.PHYSICAL_BYTES ||\n          metricPoint.name === QuickPulseMetricNames.PROCESSOR_TIME_NORMALIZED\n        ) {\n          const oldMetricPoint: MetricPoint = {\n            weight: 1,\n            name:\n              metricPoint.name === QuickPulseMetricNames.PHYSICAL_BYTES\n                ? QuickPulseMetricNames.COMMITTED_BYTES\n                : QuickPulseMetricNames.PROCESSOR_TIME,\n            value: dataPoint.value as number,\n          };\n          metricPoints.push(oldMetricPoint);\n        }\n      });\n    });\n  });\n\n  derivedMetricValues.forEach((value, id) => {\n    const metricPoint: MetricPoint = {\n      weight: 1,\n      name: id,\n      value: value,\n    };\n    metricPoints.push(metricPoint);\n  });\n\n  const quickpulseDataPoint: MonitoringDataPoint = {\n    ...baseMonitoringDataPoint,\n    timestamp: new Date(),\n    metrics: metricPoints,\n    documents: documents,\n    collectionConfigurationErrors: errors,\n  };\n  return [quickpulseDataPoint];\n}\n\nfunction getIso8601Duration(milliseconds: number): string {\n  const seconds = milliseconds / 1000;\n  return `PT${seconds}S`;\n}\n\nexport function getSpanData(span: ReadableSpan): RequestData | DependencyData {\n  if (span.kind === SpanKind.SERVER || span.kind === SpanKind.CONSUMER) {\n    // request\n    return getRequestData(span);\n  } else {\n    // dependency\n    return getDependencyData(span);\n  }\n}\n\nexport function getSpanExceptionColumns(\n  eventAttributes: Attributes,\n  spanAttributes: Attributes,\n): ExceptionData {\n  const exceptionData: ExceptionData = {\n    Message: eventAttributes[SEMATTRS_EXCEPTION_MESSAGE] as string,\n    StackTrace: eventAttributes[SEMATTRS_EXCEPTION_STACKTRACE] as string,\n    CustomDimensions: createCustomDimsFromAttributes(spanAttributes),\n  };\n  return exceptionData;\n}\n\n// A slightly modified version of createRequestData from spanUtils in exporter\nfunction getRequestData(span: ReadableSpan): RequestData {\n  const requestData: RequestData = {\n    Url: \"\",\n    Duration: hrTimeToMilliseconds(span.duration),\n    ResponseCode: 0,\n    Success: false,\n    Name: span.name || \"\",\n    CustomDimensions: createCustomDimsFromAttributes(span.attributes),\n  };\n\n  const httpMethod = getHttpMethod(span.attributes);\n  const grpcStatusCode = span.attributes[SEMATTRS_RPC_GRPC_STATUS_CODE];\n  if (httpMethod) {\n    requestData.Url = getUrl(span.attributes);\n    if (URL.canParse(requestData.Url)) {\n      const urlObj = new URL(requestData.Url);\n      requestData.Name = `${httpMethod} ${urlObj.pathname}`;\n    } else {\n      Logger.getInstance().info(\"Request data sent to live metrics has no valid URL field.\");\n    }\n    const httpStatusCode = getHttpStatusCode(span.attributes);\n    if (httpStatusCode) {\n      requestData.ResponseCode = Number(httpStatusCode);\n    }\n  } else if (grpcStatusCode) {\n    requestData.ResponseCode = Number(grpcStatusCode);\n  }\n  requestData.Success = span.status.code !== SpanStatusCode.ERROR && requestData.ResponseCode < 400;\n  return requestData;\n}\n\n// A slightly modified version of createDependencyData from spanUtils in exporter\nfunction getDependencyData(span: ReadableSpan): DependencyData {\n  const dependencyData: DependencyData = {\n    Target: \"\",\n    Duration: hrTimeToMilliseconds(span.duration),\n    Success: span.status.code !== SpanStatusCode.ERROR,\n    Name: span.name,\n    ResultCode: 0,\n    Type: \"\",\n    Data: \"\",\n    CustomDimensions: createCustomDimsFromAttributes(span.attributes),\n  };\n\n  if (span.kind === SpanKind.PRODUCER) {\n    dependencyData.Type = DependencyTypes.QueueMessage;\n  }\n  if (span.kind === SpanKind.INTERNAL && span.parentSpanId) {\n    dependencyData.Type = DependencyTypes.InProc;\n  }\n\n  const httpMethod = getHttpMethod(span.attributes);\n  const dbSystem = span.attributes[SEMATTRS_DB_SYSTEM];\n  const rpcSystem = span.attributes[SEMATTRS_RPC_SYSTEM];\n  // HTTP Dependency\n  if (httpMethod) {\n    const httpUrl = getHttpUrl(span.attributes);\n    if (httpUrl) {\n      if (URL.canParse(String(httpUrl))) {\n        const dependencyUrl = new URL(String(httpUrl));\n        dependencyData.Name = `${httpMethod} ${dependencyUrl.pathname}`;\n      } else {\n        Logger.getInstance().info(\"Dependency data sent to live metrics has no valid URL field.\");\n      }\n    }\n    dependencyData.Type = DependencyTypes.Http;\n    dependencyData.Data = getUrl(span.attributes);\n    const httpStatusCode = getHttpStatusCode(span.attributes);\n    if (httpStatusCode) {\n      dependencyData.ResultCode = Number(httpStatusCode);\n    }\n    let target = getDependencyTarget(span.attributes);\n    if (target) {\n      try {\n        // Remove default port\n        const portRegex = new RegExp(/(https?)(:\\/\\/.*)(:\\d+)(\\S*)/);\n        const res = portRegex.exec(target);\n        if (res !== null) {\n          const protocol = res[1];\n          const port = res[3];\n          if (\n            (protocol === \"https\" && port === \":443\") ||\n            (protocol === \"http\" && port === \":80\")\n          ) {\n            // Drop port\n            target = res[1] + res[2] + res[4];\n          }\n        }\n      } catch (ex: any) {\n        /* no-op */\n      }\n      dependencyData.Target = `${target}`;\n    }\n  }\n  // DB Dependency\n  else if (dbSystem) {\n    // TODO: Remove special logic when Azure UX supports OpenTelemetry dbSystem\n    if (String(dbSystem) === DBSYSTEMVALUES_MYSQL) {\n      dependencyData.Type = DependencyTypes.mysql;\n    } else if (String(dbSystem) === DBSYSTEMVALUES_POSTGRESQL) {\n      dependencyData.Type = DependencyTypes.postgresql;\n    } else if (String(dbSystem) === DBSYSTEMVALUES_MONGODB) {\n      dependencyData.Type = DependencyTypes.mongodb;\n    } else if (String(dbSystem) === DBSYSTEMVALUES_REDIS) {\n      dependencyData.Type = DependencyTypes.redis;\n    } else if (isSqlDB(String(dbSystem))) {\n      dependencyData.Type = DependencyTypes.Sql;\n    } else {\n      dependencyData.Type = String(dbSystem);\n    }\n    const dbStatement = span.attributes[SEMATTRS_DB_STATEMENT];\n    const dbOperation = span.attributes[SEMATTRS_DB_OPERATION];\n    if (dbStatement) {\n      dependencyData.Data = String(dbStatement);\n    } else if (dbOperation) {\n      dependencyData.Data = String(dbOperation);\n    }\n    const target = getDependencyTarget(span.attributes);\n    const dbName = span.attributes[SEMATTRS_DB_NAME];\n    if (target) {\n      dependencyData.Target = dbName ? `${target}|${dbName}` : `${target}`;\n    } else {\n      dependencyData.Target = dbName ? `${dbName}` : `${dbSystem}`;\n    }\n  }\n\n  // grpc Dependency\n  else if (rpcSystem) {\n    if (rpcSystem === DependencyTypes.Wcf) {\n      dependencyData.Type = DependencyTypes.Wcf;\n    } else {\n      dependencyData.Type = DependencyTypes.Grpc;\n    }\n    const grpcStatusCode = span.attributes[SEMATTRS_RPC_GRPC_STATUS_CODE];\n    if (grpcStatusCode) {\n      dependencyData.ResultCode = Number(grpcStatusCode);\n    }\n    const target = getDependencyTarget(span.attributes);\n    if (target) {\n      dependencyData.Target = `${target}`;\n    } else if (rpcSystem) {\n      dependencyData.Target = String(rpcSystem);\n    }\n  }\n  return dependencyData;\n}\n\nexport function getLogData(log: LogRecord): ExceptionData | TraceData {\n  const customDims = createCustomDimsFromAttributes(log.attributes);\n  if (isExceptionTelemetry(log)) {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      Message: String(log.attributes[SEMATTRS_EXCEPTION_MESSAGE]),\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      StackTrace: String(log.attributes[SEMATTRS_EXCEPTION_STACKTRACE]),\n      CustomDimensions: customDims,\n    };\n  } else {\n    return {\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      Message: String(log.body),\n      CustomDimensions: customDims,\n    };\n  }\n}\n\nexport function getLogDocument(data: TelemetryData, exceptionType?: string): Trace | Exception {\n  if (isExceptionData(data) && exceptionType) {\n    return {\n      documentType: KnownDocumentType.Exception,\n      exceptionMessage: data.Message,\n      exceptionType: exceptionType,\n      properties: mapToKeyValuePairList(data.CustomDimensions),\n    };\n  } else {\n    // trace\n    return {\n      documentType: KnownDocumentType.Trace,\n      message: (data as TraceData).Message,\n      properties: mapToKeyValuePairList(data.CustomDimensions),\n    };\n  }\n}\n\nexport function isRequestData(data: TelemetryData): data is RequestData {\n  return (data as RequestData).Url !== undefined;\n}\n\nexport function isDependencyData(data: TelemetryData): data is DependencyData {\n  return (data as DependencyData).Target !== undefined;\n}\n\nexport function isTraceData(data: TelemetryData): data is TraceData {\n  return (data as TraceData).Message !== undefined && (data as any).StackTrace === undefined;\n}\n\nexport function isExceptionData(data: TelemetryData): data is ExceptionData {\n  return (data as ExceptionData).StackTrace !== undefined;\n}\n\nexport function getSpanDocument(telemetryData: TelemetryData): Request | RemoteDependency {\n  let document: Request | RemoteDependency = {\n    documentType: KnownDocumentType.Request,\n  };\n\n  if (isRequestData(telemetryData)) {\n    document = {\n      documentType: KnownDocumentType.Request,\n      name: telemetryData.Name,\n      url: telemetryData.Url,\n      responseCode: String(telemetryData.ResponseCode),\n      duration: getIso8601Duration(telemetryData.Duration),\n    };\n  } else if (isDependencyData(telemetryData)) {\n    document = {\n      documentType: KnownDocumentType.RemoteDependency,\n      name: telemetryData.Name,\n      commandName: telemetryData.Data,\n      resultCode: String(telemetryData.ResultCode),\n      duration: getIso8601Duration(telemetryData.Duration),\n    };\n  }\n\n  document.properties = mapToKeyValuePairList(telemetryData.CustomDimensions);\n  return document;\n}\n\nfunction createCustomDimsFromAttributes(\n  attributes?: Attributes | LogAttributes,\n): Map<string, string> {\n  const customDims = new Map<string, string>();\n  if (attributes) {\n    for (const key of Object.keys(attributes)) {\n      if (\n        !(\n          key.startsWith(\"_MS.\") ||\n          legacySemanticValues.includes(key) ||\n          httpSemanticValues.includes(key as any)\n        )\n      ) {\n        // eslint-disable-next-line @typescript-eslint/no-base-to-string\n        customDims.set(key, String(attributes[key]));\n      }\n    }\n  }\n  return customDims;\n}\n\nfunction mapToKeyValuePairList(map: Map<string, string>): KeyValuePairString[] {\n  const list: KeyValuePairString[] = [];\n  map.forEach((value, key) => {\n    list.push({ key, value });\n  });\n  return list;\n}\n\nfunction getUrl(attributes: Attributes): string {\n  if (!attributes) {\n    return \"\";\n  }\n  const httpMethod = getHttpMethod(attributes);\n  if (httpMethod) {\n    const httpUrl = getHttpUrl(attributes);\n    if (httpUrl) {\n      return String(httpUrl);\n    } else {\n      const httpScheme = getHttpScheme(attributes);\n      const httpTarget = getHttpTarget(attributes);\n      if (httpScheme && httpTarget) {\n        const httpHost = getHttpHost(attributes);\n        if (httpHost) {\n          return `${httpScheme}://${httpHost}${httpTarget}`;\n        } else {\n          const netPeerPort = getNetPeerPort(attributes);\n          if (netPeerPort) {\n            const netPeerName = getNetPeerName(attributes);\n            if (netPeerName) {\n              return `${httpScheme}://${netPeerName}:${netPeerPort}${httpTarget}`;\n            } else {\n              const netPeerIp = getPeerIp(attributes);\n              if (netPeerIp) {\n                return `${httpScheme}://${netPeerIp}:${netPeerPort}${httpTarget}`;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return \"\";\n}\n\n/**\n * UTC time the request was made. Expressed as the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight on January 1, 0001. This is used for clock skew calculations, so the value can never be stale (cached).\n *\n * @example\n * 8/5/2020 10:15:00 PM UTC =\\> 637322625000000000\n * 8/5/2020 10:15:01 PM UTC =\\> 637322625010000000\n */\nexport function getTransmissionTime(): number {\n  return (Date.now() + 62135596800000) * 10000;\n}\n\nexport function getMsFromFilterTimestampString(timestamp: string): number {\n  // The service side will return a timestamp in the following format:\n  // [days].[hours]:[minutes]:[seconds]\n  // the seconds may be a whole number or something like 7.89. 7.89 seconds translates to 7890 ms.\n  // writing this method because date.getmilliseconds() returns incorrect result on large timestamps.\n  // examples: \"14.6:56:7.89\" = 1234567890 ms, \"0.0:0:0.2\" = 200 ms\n  const parts = timestamp.split(\":\");\n  if (parts.length !== 3) {\n    return NaN;\n  }\n  const seconds = parseFloat(parts[2]);\n  const minutes = parseFloat(parts[1]);\n  const firstPart = parts[0].split(\".\");\n  if (firstPart.length !== 2) {\n    return NaN;\n  }\n  const hours = parseFloat(firstPart[1]);\n  const days = parseFloat(firstPart[0]);\n\n  if (isNaN(days) || isNaN(hours) || isNaN(minutes) || isNaN(seconds)) {\n    return NaN;\n  }\n\n  return seconds * 1000 + minutes * 60000 + hours * 3600000 + days * 86400000;\n}\n\nexport function getPeerIp(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(attributes[ATTR_NETWORK_PEER_ADDRESS] || attributes[SEMATTRS_NET_PEER_IP]);\n  }\n  return;\n}\n\nexport function getUserAgent(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(attributes[ATTR_USER_AGENT_ORIGINAL] || attributes[SEMATTRS_HTTP_USER_AGENT]);\n  }\n  return;\n}\n\nexport function getHttpUrl(attributes: Attributes): string {\n  // Stable sem conv only supports populating url from `url.full`\n  if (attributes) {\n    return String(attributes[ATTR_URL_FULL] || attributes[SEMATTRS_HTTP_URL] || \"\");\n  }\n  return \"\";\n}\n\nexport function getHttpMethod(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(attributes[ATTR_HTTP_REQUEST_METHOD] || attributes[SEMATTRS_HTTP_METHOD]);\n  }\n  return;\n}\n\nexport function getHttpStatusCode(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(\n      attributes[ATTR_HTTP_RESPONSE_STATUS_CODE] || attributes[SEMATTRS_HTTP_STATUS_CODE],\n    );\n  }\n  return;\n}\n\nexport function getHttpScheme(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(attributes[ATTR_URL_SCHEME] || attributes[SEMATTRS_HTTP_SCHEME]);\n  }\n  return;\n}\n\nexport function getHttpTarget(attributes: Attributes): string {\n  if (attributes) {\n    if (attributes[ATTR_URL_PATH]) {\n      return String(attributes[ATTR_URL_PATH]);\n    }\n    if (attributes[ATTR_URL_QUERY]) {\n      return String(attributes[ATTR_URL_QUERY]);\n    }\n    return String(attributes[SEMATTRS_HTTP_TARGET] || \"\");\n  }\n  return \"\";\n}\n\nexport function getHttpHost(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(attributes[ATTR_SERVER_ADDRESS] || attributes[SEMATTRS_HTTP_HOST]);\n  }\n  return;\n}\n\nexport function getNetPeerName(attributes: Attributes): string {\n  if (attributes) {\n    return String(attributes[ATTR_CLIENT_ADDRESS] || attributes[SEMATTRS_NET_PEER_NAME] || \"\");\n  }\n  return \"\";\n}\n\nexport function getNetHostPort(attributes: Attributes): string {\n  if (attributes) {\n    return String(attributes[ATTR_SERVER_PORT] || attributes[SEMATTRS_NET_HOST_PORT] || \"\");\n  }\n  return \"\";\n}\n\nexport function getNetPeerPort(attributes: Attributes): string | undefined {\n  if (attributes) {\n    return String(\n      attributes[ATTR_CLIENT_PORT] ||\n        attributes[ATTR_SERVER_PORT] ||\n        attributes[SEMATTRS_NET_PEER_PORT],\n    );\n  }\n  return;\n}\n"]}