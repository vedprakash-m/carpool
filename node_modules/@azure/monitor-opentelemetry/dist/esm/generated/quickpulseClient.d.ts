import * as coreClient from "@azure/core-client";
import { QuickpulseClientOptionalParams, IsSubscribedOptionalParams, IsSubscribedResponse, PublishOptionalParams, PublishResponse } from "./models/index.js";
export declare class QuickpulseClient extends coreClient.ServiceClient {
    apiVersion: string;
    /**
     * Initializes a new instance of the QuickpulseClient class.
     * @param options The parameter options
     */
    constructor(options?: QuickpulseClientOptionalParams);
    /** A function that adds a policy that sets the api-version (or equivalent) to reflect the library version. */
    private addCustomApiVersionPolicy;
    /**
     * Determine whether there is any subscription to the metrics and documents.
     * @param endpoint The endpoint of the Live Metrics service.
     * @param ikey The instrumentation key of the target Application Insights component for which the
     *             client checks whether there's any subscription to it.
     * @param options The options parameters.
     */
    isSubscribed(endpoint: string, ikey: string, options?: IsSubscribedOptionalParams): Promise<IsSubscribedResponse>;
    /**
     * Publish live metrics to the Live Metrics service when there is an active subscription to the
     * metrics.
     * @param endpoint The endpoint of the Live Metrics service.
     * @param ikey The instrumentation key of the target Application Insights component for which the
     *             client checks whether there's any subscription to it.
     * @param options The options parameters.
     */
    publish(endpoint: string, ikey: string, options?: PublishOptionalParams): Promise<PublishResponse>;
}
//# sourceMappingURL=quickpulseClient.d.ts.map