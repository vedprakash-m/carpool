/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { MonitoringDataPoint as MonitoringDataPointMapper } from "../models/mappers.js";
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String",
        },
    },
};
export const monitoringDataPoint = {
    parameterPath: ["options", "monitoringDataPoint"],
    mapper: MonitoringDataPointMapper,
};
export const accept = {
    parameterPath: "accept",
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Accept",
        type: {
            name: "String",
        },
    },
};
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2024-04-01-preview",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String",
        },
    },
};
export const ikey = {
    parameterPath: "ikey",
    mapper: {
        serializedName: "ikey",
        required: true,
        type: {
            name: "String",
        },
    },
};
export const transmissionTime = {
    parameterPath: ["options", "transmissionTime"],
    mapper: {
        serializedName: "x-ms-qps-transmission-time",
        type: {
            name: "Number",
        },
    },
};
export const machineName = {
    parameterPath: ["options", "machineName"],
    mapper: {
        serializedName: "x-ms-qps-machine-name",
        type: {
            name: "String",
        },
    },
};
export const instanceName = {
    parameterPath: ["options", "instanceName"],
    mapper: {
        serializedName: "x-ms-qps-instance-name",
        type: {
            name: "String",
        },
    },
};
export const streamId = {
    parameterPath: ["options", "streamId"],
    mapper: {
        serializedName: "x-ms-qps-stream-id",
        type: {
            name: "String",
        },
    },
};
export const roleName = {
    parameterPath: ["options", "roleName"],
    mapper: {
        serializedName: "x-ms-qps-role-name",
        type: {
            name: "String",
        },
    },
};
export const invariantVersion = {
    parameterPath: ["options", "invariantVersion"],
    mapper: {
        serializedName: "x-ms-qps-invariant-version",
        type: {
            name: "String",
        },
    },
};
export const configurationEtag = {
    parameterPath: ["options", "configurationEtag"],
    mapper: {
        serializedName: "x-ms-qps-configuration-etag",
        type: {
            name: "String",
        },
    },
};
export const monitoringDataPoints = {
    parameterPath: ["options", "monitoringDataPoints"],
    mapper: {
        serializedName: "monitoringDataPoints",
        type: {
            name: "Sequence",
            element: {
                type: {
                    name: "Composite",
                    className: "MonitoringDataPoint",
                },
            },
        },
    },
};
//# sourceMappingURL=parameters.js.map