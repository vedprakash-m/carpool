{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;;;;;;;;;;;;AAEH,sDAKiC;AAEjC,MAAM,SAAS,GAA2B;IACxC,KAAK,EAAE,yBAAc,CAAC,KAAK;IAC3B,IAAI,EAAE,yBAAc,CAAC,IAAI;IACzB,IAAI,EAAE,yBAAc,CAAC,IAAI;IACzB,IAAI,EAAE,yBAAc,CAAC,MAAM;IAC3B,OAAO,EAAE,yBAAc,CAAC,MAAM;IAC9B,KAAK,EAAE,yBAAc,CAAC,KAAK;IAC3B,KAAK,EAAE,yBAAc,CAAC,KAAK;CAC5B,CAAC;AAEF,MAAM,YAAY,GAA2B;IAC3C,KAAK,EAAE,yBAAc,CAAC,MAAM;IAC5B,KAAK,EAAE,yBAAc,CAAC,MAAM;IAC5B,IAAI,EAAE,yBAAc,CAAC,KAAK;IAC1B,KAAK,EAAE,yBAAc,CAAC,KAAK;IAC3B,OAAO,EAAE,yBAAc,CAAC,IAAI;IAC5B,MAAM,EAAE,yBAAc,CAAC,KAAK;IAC5B,IAAI,EAAE,yBAAc,CAAC,IAAI;IACzB,KAAK,EAAE,yBAAc,CAAC,KAAK;CAC5B,CAAC;AAEF,MAAM,SAAS,GAA2B;IACxC,KAAK,EAAE,yBAAc,CAAC,KAAK;IAC3B,IAAI,EAAE,yBAAc,CAAC,IAAI;IACzB,IAAI,EAAE,yBAAc,CAAC,KAAK;IAC1B,IAAI,EAAE,yBAAc,CAAC,KAAK;IAC1B,IAAI,EAAE,yBAAc,CAAC,IAAI;IACzB,KAAK,EAAE,yBAAc,CAAC,KAAK;IAC3B,MAAM,EAAE,yBAAc,CAAC,MAAM;IAC7B,OAAO,EAAE,yBAAc,CAAC,MAAM;IAC9B,KAAK,EAAE,yBAAc,CAAC,MAAM;IAC5B,KAAK,EAAE,yBAAc,CAAC,KAAK;CAC5B,CAAC;AAEF,SAAS,iBAAiB,CAAC,KAAa;;IACtC,OAAO,MAAA,MAAA,SAAS,CAAC,KAAK,CAAC,mCAAI,YAAY,CAAC,KAAK,CAAC,mCAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AACrE,CAAC;AAED,SAAgB,aAAa,CAC3B,MAA2B,EAC3B,MAAc;IAEd,MAAM,EAAE,OAAO,EAAE,KAAK,KAAe,MAAM,EAAhB,KAAK,UAAK,MAAM,EAArC,oBAA4B,CAAS,CAAC;IAC5C,MAAM,UAAU,GAAkB,EAAE,CAAC;IACrC,KAAK,MAAM,GAAG,IAAI,KAAK,EAAE;QACvB,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE;YACpD,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;SAC9B;KACF;IACD,MAAM,SAAS,GAAc;QAC3B,cAAc,EAAE,iBAAiB,CAAC,KAAK,CAAC;QACxC,YAAY,EAAE,KAAK;QACnB,IAAI,EAAE,OAAO;QACb,UAAU,EAAE,UAAU;KACvB,CAAC;IACF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACzB,CAAC;AAlBD,sCAkBC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  LogAttributes,\n  LogRecord,\n  Logger,\n  SeverityNumber,\n} from '@opentelemetry/api-logs';\n\nconst npmLevels: Record<string, number> = {\n  error: SeverityNumber.ERROR,\n  warn: SeverityNumber.WARN,\n  info: SeverityNumber.INFO,\n  http: SeverityNumber.DEBUG3,\n  verbose: SeverityNumber.DEBUG2,\n  debug: SeverityNumber.DEBUG,\n  silly: SeverityNumber.TRACE,\n};\n\nconst sysLoglevels: Record<string, number> = {\n  emerg: SeverityNumber.FATAL3,\n  alert: SeverityNumber.FATAL2,\n  crit: SeverityNumber.FATAL,\n  error: SeverityNumber.ERROR,\n  warning: SeverityNumber.WARN,\n  notice: SeverityNumber.INFO2,\n  info: SeverityNumber.INFO,\n  debug: SeverityNumber.DEBUG,\n};\n\nconst cliLevels: Record<string, number> = {\n  error: SeverityNumber.ERROR,\n  warn: SeverityNumber.WARN,\n  help: SeverityNumber.INFO3,\n  data: SeverityNumber.INFO2,\n  info: SeverityNumber.INFO,\n  debug: SeverityNumber.DEBUG,\n  prompt: SeverityNumber.TRACE4,\n  verbose: SeverityNumber.TRACE3,\n  input: SeverityNumber.TRACE2,\n  silly: SeverityNumber.TRACE,\n};\n\nfunction getSeverityNumber(level: string): SeverityNumber | undefined {\n  return npmLevels[level] ?? sysLoglevels[level] ?? cliLevels[level];\n}\n\nexport function emitLogRecord(\n  record: Record<string, any>,\n  logger: Logger\n): void {\n  const { message, level, ...splat } = record;\n  const attributes: LogAttributes = {};\n  for (const key in splat) {\n    if (Object.prototype.hasOwnProperty.call(splat, key)) {\n      attributes[key] = splat[key];\n    }\n  }\n  const logRecord: LogRecord = {\n    severityNumber: getSeverityNumber(level),\n    severityText: level,\n    body: message,\n    attributes: attributes,\n  };\n  logger.emit(logRecord);\n}\n"]}