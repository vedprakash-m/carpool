{"version":3,"file":"OpenTelemetryTransportV3.js","sourceRoot":"","sources":["../../src/OpenTelemetryTransportV3.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;GAcG;;;AAEH,sDAAuD;AACvD,qDAAsD;AACtD,kBAAkB;AAClB,uCAA0D;AAC1D,mCAAwC;AAExC,MAAa,wBAAyB,SAAQ,eAAe;IAG3D,YAAY,OAAgD;QAC1D,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,eAAI,CAAC,SAAS,CAAC,sBAAY,EAAE,yBAAe,CAAC,CAAC;IAC/D,CAAC;IAEe,GAAG,CAAC,IAAS,EAAE,QAAoB;QACjD,IAAI;YACF,IAAA,qBAAa,EAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;SACnC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC1B;QACD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1B,IAAI,QAAQ,EAAE;YACZ,QAAQ,EAAE,CAAC;SACZ;IACH,CAAC;CACF;AAnBD,4DAmBC","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, logs } from '@opentelemetry/api-logs';\nimport TransportStream = require('winston-transport');\n/** @knipignore */\nimport { PACKAGE_NAME, PACKAGE_VERSION } from './version';\nimport { emitLogRecord } from './utils';\n\nexport class OpenTelemetryTransportV3 extends TransportStream {\n  private _logger: Logger;\n\n  constructor(options?: TransportStream.TransportStreamOptions) {\n    super(options);\n    this._logger = logs.getLogger(PACKAGE_NAME, PACKAGE_VERSION);\n  }\n\n  public override log(info: any, callback: () => void) {\n    try {\n      emitLogRecord(info, this._logger);\n    } catch (error) {\n      this.emit('warn', error);\n    }\n    this.emit('logged', info);\n    if (callback) {\n      callback();\n    }\n  }\n}\n"]}