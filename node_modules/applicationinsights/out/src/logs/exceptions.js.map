{"version":3,"file":"exceptions.js","sourceRoot":"","sources":["../../../src/logs/exceptions.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nimport { logs } from \"@opentelemetry/api-logs\";\r\nimport { Util } from \"../shared/util\";\r\nimport { LogApi } from \"../shim/logsApi\";\r\nimport { LoggerProvider } from \"@opentelemetry/sdk-logs\";\r\n\r\ntype ExceptionHandle = \"uncaughtExceptionMonitor\" | \"uncaughtException\" | \"unhandledRejection\";\r\nconst UNCAUGHT_EXCEPTION_HANDLER_NAME: ExceptionHandle = \"uncaughtException\";\r\nconst UNHANDLED_REJECTION_HANDLER_NAME: ExceptionHandle = \"unhandledRejection\";\r\nconst FALLBACK_ERROR_MESSAGE =\r\n    \"A promise was rejected without providing an error. Application Insights generated this error stack for you.\";\r\n\r\nexport class AutoCollectExceptions {\r\n    private _exceptionListenerHandle?: (error: Error | undefined) => void;\r\n    private _rejectionListenerHandle?: (error: Error | undefined) => void;\r\n    private _client: LogApi;\r\n\r\n    constructor(client: LogApi) {\r\n        this._client = client;\r\n        this._exceptionListenerHandle = this._handleException.bind(\r\n            this,\r\n            true,\r\n            UNCAUGHT_EXCEPTION_HANDLER_NAME\r\n        );\r\n        this._rejectionListenerHandle = this._handleException.bind(\r\n            this,\r\n            false,\r\n            UNHANDLED_REJECTION_HANDLER_NAME\r\n        ); // never rethrows\r\n        (<any>process).on(\r\n            UNCAUGHT_EXCEPTION_HANDLER_NAME,\r\n            this._exceptionListenerHandle\r\n        );\r\n        (<any>process).on(\r\n            UNHANDLED_REJECTION_HANDLER_NAME,\r\n            this._rejectionListenerHandle\r\n        );\r\n    }\r\n\r\n    public shutdown() {\r\n        if (this._exceptionListenerHandle) {\r\n            if (this._exceptionListenerHandle) {\r\n                process.removeListener(\r\n                    UNCAUGHT_EXCEPTION_HANDLER_NAME,\r\n                    this._exceptionListenerHandle\r\n                );\r\n            }\r\n            if (this._rejectionListenerHandle) {\r\n                process.removeListener(\r\n                    UNHANDLED_REJECTION_HANDLER_NAME,\r\n                    this._rejectionListenerHandle\r\n                );\r\n            }\r\n        }\r\n        this._exceptionListenerHandle = undefined;\r\n        this._rejectionListenerHandle = undefined;\r\n        delete this._exceptionListenerHandle;\r\n        delete this._rejectionListenerHandle;\r\n    }\r\n\r\n    private _handleException(\r\n        reThrow: boolean,\r\n        name: ExceptionHandle,\r\n        error: Error | undefined = new Error(FALLBACK_ERROR_MESSAGE)\r\n    ) {\r\n        if (this._client) {\r\n            this._client.trackException({ exception: error });\r\n            try {\r\n                (logs.getLoggerProvider() as LoggerProvider).forceFlush().then(() => {\r\n                    // only rethrow when we are the only listener\r\n                    if (reThrow && name && process.listeners(name as any).length === 1) {\r\n                        // eslint-disable-next-line no-console\r\n                        console.error(error);\r\n                        // eslint-disable-next-line no-process-exit\r\n                        process.exit(1);\r\n                    }\r\n                });\r\n            } catch (error) {\r\n                console.error(`Could not get the loggerProvider upon handling a tracked exception: ${error}`);\r\n            }\r\n        } else {\r\n            // eslint-disable-next-line no-console\r\n            console.error(error);\r\n            process.exit(1);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// regex to match stack frames from ie/chrome/ff\r\n// methodName=$2, fileName=$4, lineNo=$5, column=$6\r\nconst stackFramesRegex = /^(\\s+at)?(.*?)(\\@|\\s\\(|\\s)([^\\(\\n]+):(\\d+):(\\d+)(\\)?)$/;\r\n\r\nexport class _StackFrame {\r\n    public sizeInBytes = 0;\r\n    public level: number;\r\n    public method: string;\r\n    public assembly: string;\r\n    public fileName: string;\r\n    public line: number;\r\n\r\n    private _baseSize = 58; //'{\"method\":\"\",\"level\":,\"assembly\":\"\",\"fileName\":\"\",\"line\":}'.length\r\n\r\n    constructor(frame: string, level: number) {\r\n        this.level = level;\r\n        this.method = \"<no_method>\";\r\n        this.assembly = Util.getInstance().trim(frame);\r\n        const matches = frame.match(stackFramesRegex);\r\n        if (matches && matches.length >= 5) {\r\n            this.method = Util.getInstance().trim(matches[2]) || this.method;\r\n            this.fileName = Util.getInstance().trim(matches[4]) || \"<no_filename>\";\r\n            this.line = parseInt(matches[5]) || 0;\r\n        }\r\n\r\n        this.sizeInBytes += this.method.length;\r\n        this.sizeInBytes += this.fileName.length;\r\n        this.sizeInBytes += this.assembly.length;\r\n\r\n        // todo: these might need to be removed depending on how the back-end settles on their size calculation\r\n        this.sizeInBytes += this._baseSize;\r\n        this.sizeInBytes += this.level.toString().length;\r\n        this.sizeInBytes += this.line.toString().length;\r\n    }\r\n}\r\n\r\nexport function parseStack(stack: any): _StackFrame[] {\r\n    let parsedStack: _StackFrame[] = undefined;\r\n    if (typeof stack === \"string\") {\r\n        const frames = stack.split(\"\\n\");\r\n        parsedStack = [];\r\n        let level = 0;\r\n\r\n        let totalSizeInBytes = 0;\r\n        for (let i = 0; i <= frames.length; i++) {\r\n            const frame = frames[i];\r\n            if (stackFramesRegex.test(frame)) {\r\n                const parsedFrame = new _StackFrame(frames[i], level++);\r\n                totalSizeInBytes += parsedFrame.sizeInBytes;\r\n                parsedStack.push(parsedFrame);\r\n            }\r\n        }\r\n\r\n        // DP Constraint - exception parsed stack must be < 32KB\r\n        // remove frames from the middle to meet the threshold\r\n        const exceptionParsedStackThreshold = 32 * 1024;\r\n        if (totalSizeInBytes > exceptionParsedStackThreshold) {\r\n            let left = 0;\r\n            let right = parsedStack.length - 1;\r\n            let size = 0;\r\n            let acceptedLeft = left;\r\n            let acceptedRight = right;\r\n\r\n            while (left < right) {\r\n                // check size\r\n                const lSize = parsedStack[left].sizeInBytes;\r\n                const rSize = parsedStack[right].sizeInBytes;\r\n                size += lSize + rSize;\r\n\r\n                if (size > exceptionParsedStackThreshold) {\r\n                    // remove extra frames from the middle\r\n                    const howMany = acceptedRight - acceptedLeft + 1;\r\n                    parsedStack.splice(acceptedLeft, howMany);\r\n                    break;\r\n                }\r\n\r\n                // update pointers\r\n                acceptedLeft = left;\r\n                acceptedRight = right;\r\n\r\n                left++;\r\n                right--;\r\n            }\r\n        }\r\n    }\r\n\r\n    return parsedStack;\r\n}\r\n"]}