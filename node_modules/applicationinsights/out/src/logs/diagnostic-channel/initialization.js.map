{"version":3,"file":"initialization.js","sourceRoot":"","sources":["../../../../src/logs/diagnostic-channel/initialization.ts"],"names":[],"mappings":";AAAA,4DAA4D;AAC5D,oFAAoF;;;AAIpF,4CAA0C;AAG1C,MAAM,GAAG,GAAG,mBAAmB,CAAC;AAChC,IAAI,aAAa,GAAG,KAAK,CAAC;AAE1B,SAAgB,gBAAgB;IAC5B,mCAAmC;IACnC,IAAI,CAAC,aAAa,EAAE;QAChB,aAAa,GAAG,IAAI,CAAC;QACrB,8DAA8D;QAC9D,MAAM,UAAU,GAAiC,OAAO,CAAC,+BAA+B,CAAC,CAAC;QAC1F,MAAM,OAAO,GAA2B;YACpC,OAAO,EAAE,UAAU,CAAC,OAAO;SAC9B,CAAC;QAEF,KAAK,MAAM,GAAG,IAAI,OAAO,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;YACtB,UAAI,CAAC,IAAI,CAAC,GAAG,EAAE,iBAAiB,GAAG,SAAS,CAAC,CAAC;SACjD;KACJ;AACL,CAAC;AAfD,4CAeC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\n\r\n// Don't reference modules from these directly. Use only for types.\r\nimport * as DiagChannelPublishers from \"diagnostic-channel-publishers\";\r\nimport { diag } from \"@opentelemetry/api\";\r\n\r\n\r\nconst TAG = \"DiagnosticChannel\";\r\nlet isInitialized = false;\r\n\r\nexport function enablePublishers() {\r\n    // Only register monkey patchs once\r\n    if (!isInitialized) {\r\n        isInitialized = true;\r\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\r\n        const publishers: typeof DiagChannelPublishers = require(\"diagnostic-channel-publishers\");\r\n        const modules: { [key: string]: any } = {\r\n            console: publishers.console,\r\n        };\r\n\r\n        for (const mod in modules) {\r\n            modules[mod].enable();\r\n            diag.info(TAG, `Subscribed to ${mod} events`);\r\n        }\r\n    }\r\n}\r\n"]}