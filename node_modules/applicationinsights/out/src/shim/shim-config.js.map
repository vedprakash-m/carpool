{"version":3,"file":"shim-config.js","sourceRoot":"","sources":["../../../src/shim/shim-config.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT license. See LICENSE file in the project root for details.\r\nimport http = require(\"http\");\r\nimport https = require(\"https\");\r\nimport azureCoreAuth = require(\"@azure/core-auth\");\r\nimport { diag } from \"@opentelemetry/api\";\r\nimport { HttpInstrumentationConfig } from \"@opentelemetry/instrumentation-http\";\r\nimport { DistributedTracingModes, IConfig, IDisabledExtendedMetrics, IWebInstrumentationConfig, UNSUPPORTED_MSG } from \"./types\";\r\nimport { ShimJsonConfig } from \"./shim-jsonConfig\";\r\nimport { AzureMonitorOpenTelemetryOptions, InstrumentationOptions, InstrumentationOptionsType } from \"../types\";\r\n\r\nconst ENV_azurePrefix = \"APPSETTING_\"; // Azure adds this prefix to all environment variables\r\nconst ENV_iKey = \"APPINSIGHTS_INSTRUMENTATIONKEY\"; // This key is provided in the readme\r\nconst legacy_ENV_iKey = \"APPINSIGHTS_INSTRUMENTATION_KEY\";\r\nconst ENV_profileQueryEndpoint = \"APPINSIGHTS_PROFILE_QUERY_ENDPOINT\";\r\nconst ENV_quickPulseHost = \"APPINSIGHTS_QUICKPULSE_HOST\";\r\nconst ENV_nativeMetricsDisableAll = \"APPLICATION_INSIGHTS_DISABLE_ALL_EXTENDED_METRICS\";\r\nconst ENV_nativeMetricsDisablers = \"APPLICATION_INSIGHTS_DISABLE_EXTENDED_METRIC\";\r\nclass Config implements IConfig {\r\n    public connectionString: string;\r\n    public endpointUrl: string;\r\n    public maxBatchSize: number;\r\n    public maxBatchIntervalMs: number;\r\n    public disableAppInsights: boolean;\r\n    public samplingPercentage: number;\r\n    public correlationHeaderExcludedDomains: string[];\r\n    public proxyHttpUrl: string;\r\n    public proxyHttpsUrl: string;\r\n    public httpAgent: http.Agent;\r\n    public httpsAgent: https.Agent;\r\n    public ignoreLegacyHeaders: boolean;\r\n    public aadTokenCredential?: azureCoreAuth.TokenCredential;\r\n    public enableAutoCollectConsole: boolean;\r\n    public enableLoggerErrorToTrace: boolean;\r\n    public enableAutoCollectExceptions: boolean;\r\n    public enableAutoCollectPerformance: boolean;\r\n    public enableAutoCollectExternalLoggers: boolean;\r\n    public enableAutoCollectPreAggregatedMetrics: boolean;\r\n    public enableAutoCollectHeartbeat: boolean;\r\n    public enableAutoCollectRequests: boolean;\r\n    public enableAutoCollectDependencies: boolean;\r\n    public enableAutoDependencyCorrelation: boolean;\r\n    public enableAutoCollectIncomingRequestAzureFunctions: boolean;\r\n    public enableSendLiveMetrics: boolean;\r\n    public enableUseDiskRetryCaching: boolean;\r\n    public enableUseAsyncHooks: boolean;\r\n    public distributedTracingMode: DistributedTracingModes;\r\n\r\n    public enableAutoCollectExtendedMetrics: boolean | IDisabledExtendedMetrics;\r\n    public enableResendInterval: number;\r\n    public enableMaxBytesOnDisk: number;\r\n    public enableInternalDebugLogging: boolean;\r\n    public enableInternalWarningLogging: boolean;\r\n    public disableAllExtendedMetrics: boolean;\r\n    public extendedMetricDisablers: string;\r\n    public quickPulseHost: string;\r\n    public enableWebInstrumentation: boolean;\r\n    public webInstrumentationConfig: IWebInstrumentationConfig[];\r\n    public webInstrumentationSrc: string;\r\n    public webInstrumentationConnectionString?: string;\r\n    public noPatchModules: string;\r\n    public noDiagnosticChannel: boolean;\r\n\r\n    // Expose Distro config for further customization, other conflicting configs will take precedence over this.\r\n    public azureMonitorOpenTelemetryOptions : AzureMonitorOpenTelemetryOptions;\r\n\r\n    private _configWarnings: string[];\r\n\r\n    /**\r\n   * Creates a new Config instance\r\n   * @param setupString Connection String, instrumentationKey is no longer supported here\r\n   */\r\n    constructor(setupString?: string, configWarnings?: string[]){\r\n        // Load config values from env variables and JSON if available\r\n        this._mergeConfig();\r\n        this.connectionString = setupString;\r\n        this.webInstrumentationConfig = this.webInstrumentationConfig || null;\r\n        this.ignoreLegacyHeaders = true;\r\n        this.webInstrumentationConnectionString = this.webInstrumentationConnectionString || \"\";\r\n        this._configWarnings = configWarnings || [];\r\n    }\r\n\r\n    private _mergeConfig() {\r\n        const jsonConfig = ShimJsonConfig.getInstance();\r\n        this.connectionString = jsonConfig.connectionString;\r\n        this.correlationHeaderExcludedDomains = jsonConfig.correlationHeaderExcludedDomains;\r\n        this.disableAllExtendedMetrics = jsonConfig.disableAllExtendedMetrics;\r\n        this.disableAppInsights = jsonConfig.disableAppInsights;\r\n        this.distributedTracingMode = jsonConfig.distributedTracingMode;\r\n        this.enableAutoCollectConsole = jsonConfig.enableAutoCollectConsole;\r\n        this.enableLoggerErrorToTrace = jsonConfig.enableLoggerErrorToTrace;\r\n        this.enableAutoCollectDependencies = jsonConfig.enableAutoCollectDependencies;\r\n        this.enableAutoCollectIncomingRequestAzureFunctions = jsonConfig.enableAutoCollectIncomingRequestAzureFunctions;\r\n        this.enableAutoCollectExceptions = jsonConfig.enableAutoCollectExceptions;\r\n        this.enableAutoCollectExtendedMetrics = jsonConfig.enableAutoCollectExtendedMetrics;\r\n        this.enableAutoCollectExternalLoggers = jsonConfig.enableAutoCollectExternalLoggers;\r\n        this.enableAutoCollectHeartbeat = jsonConfig.enableAutoCollectHeartbeat;\r\n        this.enableAutoCollectPerformance = jsonConfig.enableAutoCollectPerformance;\r\n        this.enableAutoCollectPreAggregatedMetrics = jsonConfig.enableAutoCollectPreAggregatedMetrics;\r\n        this.enableAutoCollectRequests = jsonConfig.enableAutoCollectRequests;\r\n        this.enableAutoDependencyCorrelation = jsonConfig.enableAutoDependencyCorrelation;\r\n        this.enableInternalDebugLogging = jsonConfig.enableInternalDebugLogging;\r\n        this.enableInternalWarningLogging = jsonConfig.enableInternalWarningLogging;\r\n        this.enableResendInterval = jsonConfig.enableResendInterval;\r\n        this.enableMaxBytesOnDisk = jsonConfig.enableMaxBytesOnDisk;\r\n        this.enableSendLiveMetrics = jsonConfig.enableSendLiveMetrics;\r\n        this.enableUseAsyncHooks = jsonConfig.enableUseAsyncHooks;\r\n        this.enableUseDiskRetryCaching = jsonConfig.enableUseDiskRetryCaching;\r\n        this.endpointUrl = jsonConfig.endpointUrl;\r\n        this.extendedMetricDisablers = jsonConfig.extendedMetricDisablers;\r\n        this.ignoreLegacyHeaders = jsonConfig.ignoreLegacyHeaders;\r\n        this.maxBatchIntervalMs = jsonConfig.maxBatchIntervalMs;\r\n        this.maxBatchSize = jsonConfig.maxBatchSize;\r\n        this.proxyHttpUrl = jsonConfig.proxyHttpUrl;\r\n        this.proxyHttpsUrl = jsonConfig.proxyHttpsUrl;\r\n        this.quickPulseHost = jsonConfig.quickPulseHost;\r\n        this.samplingPercentage = jsonConfig.samplingPercentage;\r\n        this.enableWebInstrumentation = jsonConfig.enableWebInstrumentation;\r\n        this.webInstrumentationConnectionString = jsonConfig.webInstrumentationConnectionString;\r\n        this.webInstrumentationConfig = jsonConfig.webInstrumentationConfig;\r\n        this.webInstrumentationSrc = jsonConfig.webInstrumentationSrc;\r\n        this.noPatchModules = jsonConfig.noPatchModules;\r\n        this.noDiagnosticChannel = jsonConfig.noDiagnosticChannel\r\n    }\r\n\r\n    /**\r\n    * Parse the config property to set the appropriate values on the AzureMonitorOpenTelemetryOptions\r\n    */\r\n    public parseConfig(): AzureMonitorOpenTelemetryOptions {\r\n        const options: AzureMonitorOpenTelemetryOptions = Object.assign(\r\n            {\r\n                azureMonitorExporterOptions: {\r\n                    connectionString: this.connectionString,\r\n                    disableOfflineStorage: false,\r\n                },\r\n                enableAutoCollectPerformance: true,\r\n                enableAutoCollectExceptions: true,\r\n                instrumentationOptions: {\r\n                    http: { enabled: true },\r\n                    azureSdk: { enabled: true },\r\n                    mongoDb: { enabled: true },\r\n                    mySql: { enabled: true },\r\n                    redis: { enabled: true },\r\n                    redis4: { enabled: true },\r\n                    postgreSql: { enabled: true },\r\n                    bunyan: { enabled: true },\r\n                    winston: { enabled: true },\r\n                },\r\n                otlpTraceExporterConfig: {},\r\n                otlpMetricExporterConfig: {},\r\n                otlpLogExporterConfig: {},\r\n                enableLiveMetrics: true,\r\n            },\r\n            this.azureMonitorOpenTelemetryOptions\r\n        );\r\n\r\n        (options.instrumentationOptions as InstrumentationOptions) = {\r\n            ...options.instrumentationOptions,\r\n            console: { enabled: false },\r\n        };\r\n        // If samplingPercentage is not defined, default to 100%\r\n        const samplingRatio = this.samplingPercentage !== undefined ? this.samplingPercentage / 100 : 1;\r\n        if (samplingRatio >= 0 && samplingRatio <= 1) {\r\n            options.samplingRatio = samplingRatio;\r\n        } else {\r\n            options.samplingRatio = 1;\r\n            this._configWarnings.push(\"Sampling percentage should be between 0 and 100. Defaulting to 100.\");\r\n        }\r\n        options.instrumentationOptions = {\r\n            ...options.instrumentationOptions,\r\n            http: {\r\n                ...options.instrumentationOptions?.http,\r\n            } as HttpInstrumentationConfig,\r\n        }\r\n        if (this.aadTokenCredential) {\r\n            options.azureMonitorExporterOptions.credential = this.aadTokenCredential;\r\n        }\r\n        if (typeof (this.enableAutoCollectConsole) === \"boolean\") {\r\n            const setting: boolean = this.enableAutoCollectConsole;\r\n            (options.instrumentationOptions as InstrumentationOptions) = {\r\n                ...options.instrumentationOptions,\r\n                console: { enabled: setting },\r\n            };\r\n        }\r\n        if (typeof (this.enableAutoCollectExceptions) === \"boolean\") {\r\n            options.enableAutoCollectExceptions = this.enableAutoCollectExceptions;\r\n        }\r\n\r\n        if (this.enableAutoCollectDependencies === false && this.enableAutoCollectRequests === false) {\r\n            options.instrumentationOptions.http.enabled = false;\r\n        }\r\n        else {\r\n            if (this.enableAutoCollectDependencies === false) {\r\n                options.instrumentationOptions = {\r\n                    ...options.instrumentationOptions,\r\n                    http: {\r\n                        ...options.instrumentationOptions?.http,\r\n                        enabled: true,\r\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                        ignoreOutgoingRequestHook: (request: http.RequestOptions) => true,\r\n                    } as HttpInstrumentationConfig\r\n                };\r\n            }\r\n            if (this.enableAutoCollectRequests === false) {\r\n                options.instrumentationOptions = {\r\n                    ...options.instrumentationOptions,\r\n                    http: {\r\n                        ...options.instrumentationOptions?.http,\r\n                        enabled: true,\r\n                        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n                        ignoreIncomingRequestHook: (request: http.RequestOptions) => true,\r\n                    } as HttpInstrumentationConfig\r\n                };\r\n            }\r\n        }\r\n        // Performance counters\r\n        if (typeof (this.enableAutoCollectPerformance) === \"boolean\") {\r\n            options.enablePerformanceCounters = this.enableAutoCollectPerformance;\r\n        }\r\n        if (typeof (this.enableAutoCollectExternalLoggers) === \"boolean\") {\r\n            (options.instrumentationOptions as InstrumentationOptions) = {\r\n                ...options.instrumentationOptions,\r\n                winston: { enabled: this.enableAutoCollectExternalLoggers },\r\n                bunyan: { enabled: this.enableAutoCollectExternalLoggers },\r\n            };\r\n        }\r\n        if (this.enableUseDiskRetryCaching === false) {\r\n            options.azureMonitorExporterOptions.disableOfflineStorage = true;\r\n        }\r\n        if (this.proxyHttpUrl || this.proxyHttpsUrl) {\r\n            try {\r\n                const proxyUrl = new URL(this.proxyHttpsUrl || this.proxyHttpUrl);\r\n                options.azureMonitorExporterOptions.proxyOptions = {\r\n                    host: proxyUrl.hostname,\r\n                    port: Number(proxyUrl.port),\r\n                };\r\n            }\r\n            catch (err) {\r\n                diag.warn(\"failed to parse proxy URL.\");\r\n            }\r\n        }\r\n        if (this.maxBatchIntervalMs) {\r\n            options.otlpTraceExporterConfig = { ...options.otlpTraceExporterConfig, timeoutMillis: this.maxBatchIntervalMs };\r\n            options.otlpMetricExporterConfig = { ...options.otlpMetricExporterConfig, timeoutMillis: this.maxBatchIntervalMs };\r\n            options.otlpLogExporterConfig = { ...options.otlpLogExporterConfig, timeoutMillis: this.maxBatchIntervalMs };\r\n        }\r\n        if (this.enableInternalWarningLogging === true) {\r\n            // Do not override env variable if present\r\n            if (!process.env[\"APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL\"]) {\r\n                process.env[\"APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL\"] = \"WARN\";\r\n            }\r\n\r\n        }\r\n        if (this.enableInternalDebugLogging === true) {\r\n            // Do not override env variable if present\r\n            if (!process.env[\"APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL\"]) {\r\n                process.env[\"APPLICATIONINSIGHTS_INSTRUMENTATION_LOGGING_LEVEL\"] = \"DEBUG\";\r\n            }\r\n        }\r\n        if (this.enableAutoCollectPreAggregatedMetrics === false) {\r\n            // Do not override env variable if present\r\n            if (!process.env[\"APPLICATION_INSIGHTS_NO_STANDARD_METRICS\"]) {\r\n                process.env[\"APPLICATION_INSIGHTS_NO_STANDARD_METRICS\"] = \"disable\";\r\n            }\r\n        }\r\n\r\n        if (this.noDiagnosticChannel === true) {\r\n            // Disable all instrumentations except http to conform with AppInsights 2.x behavior\r\n            for (const mod in options.instrumentationOptions) {\r\n                if (mod !== \"http\") {\r\n                    (options.instrumentationOptions as InstrumentationOptionsType)[mod] = { enabled: false };\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.noPatchModules && this.noDiagnosticChannel !== true) {\r\n            const unpatchedModules: string[] = this.noPatchModules.split(\",\");\r\n            // Convert module names not supported by new InstrumentationOptions\r\n            for (let i = 0; i < unpatchedModules.length; i++) {\r\n                if (unpatchedModules[i] === \"pg-pool\" || unpatchedModules[i] === \"pg\") {\r\n                    unpatchedModules[i] = \"postgresql\";\r\n                } else if (unpatchedModules[i] === \"mongodb-core\") {\r\n                    unpatchedModules[i] = \"mongodb\";\r\n                } else if (unpatchedModules[i] === \"redis\") {\r\n                    unpatchedModules.push(\"redis4\")\r\n                }\r\n            }\r\n\r\n            // Disable instrumentation for unpatched modules\r\n            for (const mod in options.instrumentationOptions) {\r\n                if (unpatchedModules.indexOf(mod.toLowerCase()) !== -1) {\r\n                    (options.instrumentationOptions as InstrumentationOptionsType)[mod] = { enabled: false };\r\n                }\r\n            }\r\n        }\r\n\r\n        if (typeof (this.enableSendLiveMetrics) === \"boolean\") {\r\n            options.enableLiveMetrics = this.enableSendLiveMetrics;\r\n        }\r\n\r\n        // BROWSER SDK LOADER\r\n        if (this.enableWebInstrumentation === true) {\r\n            options.browserSdkLoaderOptions = {\r\n                enabled: this.enableWebInstrumentation,\r\n                connectionString: this.webInstrumentationConnectionString,\r\n            }\r\n        }\r\n\r\n        // NOT SUPPORTED CONFIGURATION OPTIONS\r\n        if (\r\n            this.enableAutoCollectExtendedMetrics === true ||\r\n            typeof(this.enableAutoCollectExtendedMetrics) === \"object\" && Object.keys(this.enableAutoCollectExtendedMetrics).length > 0 ||\r\n            typeof(this.disableAllExtendedMetrics) === \"boolean\" ||\r\n            process.env[ENV_nativeMetricsDisableAll] ||\r\n            process.env[ENV_nativeMetricsDisablers] ||\r\n            this.extendedMetricDisablers\r\n        ) {\r\n            this._configWarnings.push(`Extended metrics are no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.disableAppInsights) {\r\n            this._configWarnings.push(`disableAppInsights configuration no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableAutoCollectHeartbeat === true) {\r\n            this._configWarnings.push(`Heartbeat metrics are no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableAutoDependencyCorrelation === false) {\r\n            this._configWarnings.push(`Auto dependency correlation cannot be turned off anymore. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (typeof (this.enableAutoCollectIncomingRequestAzureFunctions) === \"boolean\") {\r\n            this._configWarnings.push(`Auto request generation in Azure Functions is no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableUseAsyncHooks === false) {\r\n            this._configWarnings.push(`The use of non async hooks is no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.distributedTracingMode === DistributedTracingModes.AI) {\r\n            this._configWarnings.push(`AI only distributed tracing mode is no longer supported. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableResendInterval) {\r\n            this._configWarnings.push(`The resendInterval configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableMaxBytesOnDisk) {\r\n            this._configWarnings.push(`The maxBytesOnDisk configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.ignoreLegacyHeaders === false) {\r\n            this._configWarnings.push(`LegacyHeaders are not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.maxBatchSize) {\r\n            this._configWarnings.push(`The maxBatchSize configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.enableLoggerErrorToTrace) {\r\n            this._configWarnings.push(`The enableLoggerErrorToTrace configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.httpAgent || this.httpsAgent) {\r\n            this._configWarnings.push(`The httpAgent and httpsAgent configuration options are not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (\r\n            this.webInstrumentationConfig || this.webInstrumentationSrc\r\n        ) {\r\n            this._configWarnings.push(`The webInstrumentation config and src options are not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.quickPulseHost) {\r\n            this._configWarnings.push(`The quickPulseHost configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (this.correlationHeaderExcludedDomains) {\r\n            this._configWarnings.push(`The correlationHeaderExcludedDomains configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (\r\n            process.env[ENV_iKey] ||\r\n            process.env[legacy_ENV_iKey] ||\r\n            process.env[ENV_azurePrefix + ENV_iKey] ||\r\n            process.env[ENV_azurePrefix + legacy_ENV_iKey]\r\n        ) {\r\n            this._configWarnings.push(`The iKey configuration option is not supported by the shim. Please configure the the connection string instead. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (process.env[ENV_profileQueryEndpoint]) {\r\n            this._configWarnings.push(`The profileQueryEndpoint configuration option is not supported by the shim. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        if (process.env[ENV_quickPulseHost]) {\r\n            this._configWarnings.push(`Please configure the quickPulseHost in the connection string instead. ${UNSUPPORTED_MSG}`);\r\n        }\r\n        return options;\r\n    }\r\n}\r\n\r\nexport = Config;"]}