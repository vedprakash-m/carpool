{"version":3,"file":"mappers.js","sourceRoot":"","sources":["../../../../../src/declarations/generated/models/mappers.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation.\r\n * Licensed under the MIT License.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\r\n */\r\n\r\nimport * as coreClient from \"@azure/core-client\";\r\n\r\nexport const TelemetryItem: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TelemetryItem\",\r\n        modelProperties: {\r\n            version: {\r\n                defaultValue: 1,\r\n                serializedName: \"ver\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            name: {\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            time: {\r\n                serializedName: \"time\",\r\n                required: true,\r\n                type: {\r\n                    name: \"DateTime\",\r\n                },\r\n            },\r\n            sampleRate: {\r\n                defaultValue: 100,\r\n                serializedName: \"sampleRate\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            sequence: {\r\n                constraints: {\r\n                    MaxLength: 64,\r\n                },\r\n                serializedName: \"seq\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            instrumentationKey: {\r\n                serializedName: \"iKey\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            tags: {\r\n                serializedName: \"tags\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" } },\r\n                },\r\n            },\r\n            data: {\r\n                serializedName: \"data\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"MonitorBase\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const MonitorBase: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MonitorBase\",\r\n        modelProperties: {\r\n            baseType: {\r\n                serializedName: \"baseType\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            baseData: {\r\n                serializedName: \"baseData\",\r\n                type: {\r\n                    name: \"Composite\",\r\n                    className: \"MonitorDomain\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const MonitorDomain: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MonitorDomain\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            version: {\r\n                defaultValue: 2,\r\n                serializedName: \"ver\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const TrackResponse: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TrackResponse\",\r\n        modelProperties: {\r\n            itemsReceived: {\r\n                serializedName: \"itemsReceived\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            itemsAccepted: {\r\n                serializedName: \"itemsAccepted\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            errors: {\r\n                serializedName: \"errors\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"TelemetryErrorDetails\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const TelemetryErrorDetails: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TelemetryErrorDetails\",\r\n        modelProperties: {\r\n            index: {\r\n                serializedName: \"index\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            statusCode: {\r\n                serializedName: \"statusCode\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            message: {\r\n                serializedName: \"message\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const MetricDataPoint: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MetricDataPoint\",\r\n        modelProperties: {\r\n            namespace: {\r\n                constraints: {\r\n                    MaxLength: 256,\r\n                },\r\n                serializedName: \"ns\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            dataPointType: {\r\n                serializedName: \"kind\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            value: {\r\n                serializedName: \"value\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            count: {\r\n                serializedName: \"count\",\r\n                nullable: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            min: {\r\n                serializedName: \"min\",\r\n                nullable: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            max: {\r\n                serializedName: \"max\",\r\n                nullable: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            stdDev: {\r\n                serializedName: \"stdDev\",\r\n                nullable: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const TelemetryExceptionDetails: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TelemetryExceptionDetails\",\r\n        modelProperties: {\r\n            id: {\r\n                serializedName: \"id\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            outerId: {\r\n                serializedName: \"outerId\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            typeName: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"typeName\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            message: {\r\n                constraints: {\r\n                    MaxLength: 32768,\r\n                },\r\n                serializedName: \"message\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            hasFullStack: {\r\n                defaultValue: true,\r\n                serializedName: \"hasFullStack\",\r\n                type: {\r\n                    name: \"Boolean\",\r\n                },\r\n            },\r\n            stack: {\r\n                constraints: {\r\n                    MaxLength: 32768,\r\n                },\r\n                serializedName: \"stack\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            parsedStack: {\r\n                serializedName: \"parsedStack\",\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"StackFrame\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const StackFrame: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"StackFrame\",\r\n        modelProperties: {\r\n            level: {\r\n                serializedName: \"level\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n            method: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"method\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            assembly: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"assembly\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            fileName: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"fileName\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            line: {\r\n                serializedName: \"line\",\r\n                type: {\r\n                    name: \"Number\",\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const AvailabilityData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"AvailabilityData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            id: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"id\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            duration: {\r\n                serializedName: \"duration\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            success: {\r\n                serializedName: \"success\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Boolean\",\r\n                },\r\n            },\r\n            runLocation: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"runLocation\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            message: {\r\n                constraints: {\r\n                    MaxLength: 8192,\r\n                },\r\n                serializedName: \"message\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const TelemetryEventData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TelemetryEventData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const TelemetryExceptionData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"TelemetryExceptionData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            exceptions: {\r\n                serializedName: \"exceptions\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"TelemetryExceptionDetails\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            severityLevel: {\r\n                serializedName: \"severityLevel\",\r\n                nullable: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            problemId: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"problemId\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const MessageData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MessageData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            message: {\r\n                constraints: {\r\n                    MaxLength: 32768,\r\n                },\r\n                serializedName: \"message\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            severityLevel: {\r\n                serializedName: \"severityLevel\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const MetricsData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"MetricsData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            metrics: {\r\n                serializedName: \"metrics\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Sequence\",\r\n                    element: {\r\n                        type: {\r\n                            name: \"Composite\",\r\n                            className: \"MetricDataPoint\",\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const PageViewData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"PageViewData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            id: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"id\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            url: {\r\n                constraints: {\r\n                    MaxLength: 2048,\r\n                },\r\n                serializedName: \"url\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            duration: {\r\n                serializedName: \"duration\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            referredUri: {\r\n                constraints: {\r\n                    MaxLength: 2048,\r\n                },\r\n                serializedName: \"referredUri\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const PageViewPerfData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"PageViewPerfData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            id: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"id\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            url: {\r\n                constraints: {\r\n                    MaxLength: 2048,\r\n                },\r\n                serializedName: \"url\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            duration: {\r\n                serializedName: \"duration\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            perfTotal: {\r\n                serializedName: \"perfTotal\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            networkConnect: {\r\n                serializedName: \"networkConnect\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            sentRequest: {\r\n                serializedName: \"sentRequest\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            receivedResponse: {\r\n                serializedName: \"receivedResponse\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            domProcessing: {\r\n                serializedName: \"domProcessing\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const RemoteDependencyData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"RemoteDependencyData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            id: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"id\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            resultCode: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"resultCode\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            data: {\r\n                constraints: {\r\n                    MaxLength: 8192,\r\n                },\r\n                serializedName: \"data\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            type: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"type\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            target: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"target\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            duration: {\r\n                serializedName: \"duration\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            success: {\r\n                defaultValue: true,\r\n                serializedName: \"success\",\r\n                type: {\r\n                    name: \"Boolean\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n\r\nexport const RequestData: coreClient.CompositeMapper = {\r\n    type: {\r\n        name: \"Composite\",\r\n        className: \"RequestData\",\r\n        additionalProperties: { type: { name: \"Object\" } },\r\n        modelProperties: {\r\n            ...MonitorDomain.type.modelProperties,\r\n            id: {\r\n                constraints: {\r\n                    MaxLength: 512,\r\n                },\r\n                serializedName: \"id\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            name: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"name\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            duration: {\r\n                serializedName: \"duration\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            success: {\r\n                defaultValue: true,\r\n                serializedName: \"success\",\r\n                required: true,\r\n                type: {\r\n                    name: \"Boolean\",\r\n                },\r\n            },\r\n            responseCode: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"responseCode\",\r\n                required: true,\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            source: {\r\n                constraints: {\r\n                    MaxLength: 1024,\r\n                },\r\n                serializedName: \"source\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            url: {\r\n                constraints: {\r\n                    MaxLength: 2048,\r\n                },\r\n                serializedName: \"url\",\r\n                type: {\r\n                    name: \"String\",\r\n                },\r\n            },\r\n            properties: {\r\n                serializedName: \"properties\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"String\" }, constraints: { MaxLength: 8192 } },\r\n                },\r\n            },\r\n            measurements: {\r\n                serializedName: \"measurements\",\r\n                type: {\r\n                    name: \"Dictionary\",\r\n                    value: { type: { name: \"Number\" } },\r\n                },\r\n            },\r\n        },\r\n    },\r\n};\r\n"]}