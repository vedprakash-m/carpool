{"version":3,"file":"applicationInsightsClientContext.js","sourceRoot":"","sources":["../../../../src/declarations/generated/applicationInsightsClientContext.ts"],"names":[],"mappings":";AAAA;;;;;;GAMG;;;AAEH,iDAAiD;AAGjD,MAAa,gCAAiC,SAAQ,UAAU,CAAC,aAAa;IAG1E;;;OAGG;IACH,YAAY,OAAiD;QACzD,0CAA0C;QAC1C,IAAI,CAAC,OAAO,EAAE;YACV,OAAO,GAAG,EAAE,CAAC;SAChB;QACD,MAAM,QAAQ,GAA4C;YACtD,kBAAkB,EAAE,iCAAiC;SACxD,CAAC;QAEF,MAAM,cAAc,GAAG,sDAAsD,CAAC;QAC9E,MAAM,eAAe,GACjB,OAAO,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe;YAChE,CAAC,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,cAAc,EAAE;YACjE,CAAC,CAAC,GAAG,cAAc,EAAE,CAAC;QAE9B,MAAM,mBAAmB,iDAClB,QAAQ,GACR,OAAO,KACV,gBAAgB,EAAE;gBACd,eAAe;aAClB,EACD,OAAO,EAAE,OAAO,CAAC,QAAQ,IAAI,aAAa,GAC7C,CAAC;QACF,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAE3B,0CAA0C;QAC1C,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,IAAI,sCAAsC,CAAC;IACvE,CAAC;CACJ;AAnCD,4EAmCC","sourcesContent":["/*\r\n * Copyright (c) Microsoft Corporation.\r\n * Licensed under the MIT License.\r\n *\r\n * Code generated by Microsoft (R) AutoRest Code Generator.\r\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\r\n */\r\n\r\nimport * as coreClient from \"@azure/core-client\";\r\nimport { ApplicationInsightsClientOptionalParams } from \"./models\";\r\n\r\nexport class ApplicationInsightsClientContext extends coreClient.ServiceClient {\r\n    host: string;\r\n\r\n    /**\r\n     * Initializes a new instance of the ApplicationInsightsClientContext class.\r\n     * @param options The parameter options\r\n     */\r\n    constructor(options?: ApplicationInsightsClientOptionalParams) {\r\n        // Initializing default values for options\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        const defaults: ApplicationInsightsClientOptionalParams = {\r\n            requestContentType: \"application/json; charset=utf-8\",\r\n        };\r\n\r\n        const packageDetails = `azsdk-js-monitor-opentelemetry-exporter/1.0.0-beta.7`;\r\n        const userAgentPrefix =\r\n            options.userAgentOptions && options.userAgentOptions.userAgentPrefix\r\n                ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\r\n                : `${packageDetails}`;\r\n\r\n        const optionsWithDefaults = {\r\n            ...defaults,\r\n            ...options,\r\n            userAgentOptions: {\r\n                userAgentPrefix,\r\n            },\r\n            baseUri: options.endpoint || \"{Host}/v2.1\",\r\n        };\r\n        super(optionsWithDefaults);\r\n\r\n        // Assigning values to Constant parameters\r\n        this.host = options.host || \"https://dc.services.visualstudio.com\";\r\n    }\r\n}\r\n"]}