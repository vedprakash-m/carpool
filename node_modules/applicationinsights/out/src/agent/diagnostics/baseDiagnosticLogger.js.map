{"version":3,"file":"baseDiagnosticLogger.js","sourceRoot":"","sources":["../../../../src/agent/diagnostics/baseDiagnosticLogger.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,oCAAyG;AACzG,uCAAyE;AAGzE,MAAa,oBAAoB;IAU7B,YAAY,kBAA0B,EAAE,cAA4B,OAAO;QACvE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,mBAAW,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,uBAAe,CAAC;QACjC,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,CAAC,iBAAiB,CAAC;QAC/C,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC,GAAG,CAAC,0CAA0C,CAAC;QAChF,IAAI,CAAC,WAAW,GAAG,kDAA0C,CAAC;QAC9D,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAChH,CAAC;IAEM,UAAU,CAAC,aAA6B;QAC3C,QAAQ;IACZ,CAAC;CACJ;AAxBD,oDAwBC","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport { IAgentLogger, IDiagnosticLog, IDiagnosticLogger, LOGGER_LANGUAGE, LOGGER_NAME } from \"../types\";\r\nimport { APPLICATION_INSIGHTS_OPENTELEMETRY_VERSION } from \"../../types\";\r\n\r\n\r\nexport class BaseDiagnosticLogger implements IDiagnosticLogger {\r\n    protected _extensionVersion: string;\r\n    protected _instrumentationKey: string;\r\n    protected _loggerName: string;\r\n    protected _language: string;\r\n    protected _sdkVersion: string;\r\n    protected _siteName: string;\r\n    protected _subscriptionId: string;\r\n    protected _agentLogger: IAgentLogger;\r\n\r\n    constructor(instrumentationKey: string, agentLogger: IAgentLogger = console) {\r\n        this._agentLogger = agentLogger;\r\n        this._instrumentationKey = instrumentationKey;\r\n        this._loggerName = LOGGER_NAME;\r\n        this._language = LOGGER_LANGUAGE;\r\n        this._siteName = process.env.WEBSITE_SITE_NAME;\r\n        this._extensionVersion = process.env.ApplicationInsightsAgent_EXTENSION_VERSION;\r\n        this._sdkVersion = APPLICATION_INSIGHTS_OPENTELEMETRY_VERSION;\r\n        this._subscriptionId = process.env.WEBSITE_OWNER_NAME ? process.env.WEBSITE_OWNER_NAME.split(\"+\")[0] : null;\r\n    }\r\n\r\n    public logMessage(diagnosticLog: IDiagnosticLog) {\r\n        // No OP\r\n    }\r\n}\r\n"]}