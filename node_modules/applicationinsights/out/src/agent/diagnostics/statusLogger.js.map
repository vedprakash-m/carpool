{"version":3,"file":"statusLogger.js","sourceRoot":"","sources":["../../../../src/agent/diagnostics/statusLogger.ts"],"names":[],"mappings":";AAAA,uCAAuC;AACvC,kCAAkC;;;AAElC,yBAAyB;AACzB,qDAAkD;AAClD,oCAA0E;AAC1E,uCAAyE;AAGzE,MAAa,YAAY;IAQrB,YAAY,kBAA0B,EAAE,cAA4B,OAAO;QACvE,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,SAAS,GAAG,uBAAe,CAAC;QACjC,IAAI,CAAC,WAAW,GAAG,kDAA0C,CAAC;QAC9D,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1C,CAAC;IAEM,SAAS,CAAC,MAAuB,EAAE,EAAyB;QAC/D,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QAClC,IAAI,OAAO,EAAE,KAAK,UAAU,IAAI,IAAI,CAAC,YAAY,YAAY,uBAAU,EAAE;YACrE,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;SACnC;QACD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAEO,oBAAoB,CAAC,MAAuB;QAChD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC;QACvC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC;QAC7B,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC;IAC3C,CAAC;CACJ;AAhCD,oCAgCC","sourcesContent":["// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport * as os from \"os\";\r\nimport { FileWriter } from \"./writers/fileWriter\";\r\nimport { IAgentLogger, IStatusContract, LOGGER_LANGUAGE } from \"../types\";\r\nimport { APPLICATION_INSIGHTS_OPENTELEMETRY_VERSION } from \"../../types\";\r\n\r\n\r\nexport class StatusLogger {\r\n    private _instrumentationKey: string;\r\n    private _language: string;\r\n    private _sdkVersion: string;\r\n    private _processId: string;\r\n    private _machineName: string;\r\n    private _agentLogger: IAgentLogger;\r\n\r\n    constructor(instrumentationKey: string, agentLogger: IAgentLogger = console) {\r\n        this._agentLogger = agentLogger;\r\n        this._instrumentationKey = instrumentationKey;\r\n        this._language = LOGGER_LANGUAGE;\r\n        this._sdkVersion = APPLICATION_INSIGHTS_OPENTELEMETRY_VERSION;\r\n        this._machineName = os.hostname();\r\n        this._processId = String(process.pid);\r\n    }\r\n\r\n    public logStatus(status: IStatusContract, cb?: (err: Error) => void) {\r\n        this._addCommonProperties(status);\r\n        if (typeof cb === \"function\" && this._agentLogger instanceof FileWriter) {\r\n            this._agentLogger.callback = cb;\r\n        }\r\n        this._agentLogger.log(status);\r\n    }\r\n\r\n    private _addCommonProperties(status: IStatusContract) {\r\n        status.AppType = this._language;\r\n        status.MachineName = this._machineName;\r\n        status.PID = this._processId;\r\n        status.SdkVersion = this._sdkVersion;\r\n        status.Ikey = this._instrumentationKey;\r\n    }\r\n}"]}